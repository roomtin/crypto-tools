{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7","program":"/home/banana/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=a4c837dffcc0f831","-C","extra-filename=-a4c837dffcc0f831","--out-dir","/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps","-L","dependency=/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps","--extern","cfg_if=/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps/libcfg_if-88879d2dc0fa106c.rmeta","--extern","crossbeam_utils=/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps/libcrossbeam_utils-63e17451a3a86611.rmeta","--extern","lazy_static=/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps/liblazy_static-3ab14ef94a1f89cf.rmeta","--extern","memoffset=/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps/libmemoffset-aed047b9c650959e.rmeta","--extern","scopeguard=/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps/libscopeguard-033365f7c16f4ed6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/banana/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps/libcrossbeam_epoch-a4c837dffcc0f831.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[16777540922384125298,0]},"crate_root":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src","external_crates":[{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[455584805185098672,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4285763367621004875,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12948490784112333173,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1308603873087987556,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10651444168168384145,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6640890814831372317,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11051480830775375212,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9257289653237715001,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2455563926975838457,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7152235013855422505,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[3527145457585120151,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17341642574230056447,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9856655850418538632,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[25410302105305395,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4063464634788357835,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10168055474713918709,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[10733185527986310259,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[1978314927097062300,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[15074360994084715952,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[3397833776180852090,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[9181421311771653319,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","num":22,"id":{"name":"crossbeam_utils","disambiguator":[13316140229589425621,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","num":23,"id":{"name":"scopeguard","disambiguator":[14106493481044849864,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","num":24,"id":{"name":"memoffset","disambiguator":[7772424309845212772,0]}}],"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6724,"byte_end":6733,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6735,"byte_end":6741,"line_start":170,"line_end":170,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6743,"byte_end":6763,"line_start":170,"line_end":170,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6777,"byte_end":6782,"line_start":171,"line_end":171,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6784,"byte_end":6791,"line_start":171,"line_end":171,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6793,"byte_end":6799,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6846,"byte_end":6855,"line_start":173,"line_end":173,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6857,"byte_end":6868,"line_start":173,"line_end":173,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6901,"byte_end":6912,"line_start":174,"line_end":174,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6914,"byte_end":6919,"line_start":174,"line_end":174,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6983,"byte_end":7001,"line_start":177,"line_end":177,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7003,"byte_end":7024,"line_start":177,"line_end":177,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":896},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7132,"byte_end":7149,"line_start":184,"line_end":184,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7151,"byte_end":7160,"line_start":184,"line_end":184,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7162,"byte_end":7165,"line_start":184,"line_end":184,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":357},{"krate":0,"index":400},{"krate":0,"index":437},{"krate":0,"index":456},{"krate":0,"index":508},{"krate":0,"index":653},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":874},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587046,"byte_end":13587064,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13586875,"byte_end":13586934,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13586978,"byte_end":13587036,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587182,"byte_end":13587202,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587110,"byte_end":13587170,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587332,"byte_end":13587339,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587251,"byte_end":13587323,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587425,"byte_end":13587428,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587361,"byte_end":13587416,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588539,"byte_end":13588560,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587743,"byte_end":13587795,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587796,"byte_end":13587799,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587800,"byte_end":13587891,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587892,"byte_end":13587984,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587985,"byte_end":13587988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587989,"byte_end":13588054,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588055,"byte_end":13588058,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588059,"byte_end":13588153,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588154,"byte_end":13588180,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588181,"byte_end":13588273,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588274,"byte_end":13588302,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588346,"byte_end":13588528,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588626,"byte_end":13588633,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588567,"byte_end":13588618,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588851,"byte_end":13588858,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588659,"byte_end":13588707,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588712,"byte_end":13588715,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588720,"byte_end":13588813,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588818,"byte_end":13588843,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591208,"byte_end":13591217,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590235,"byte_end":13590282,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590283,"byte_end":13590286,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590287,"byte_end":13590385,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590386,"byte_end":13590481,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590482,"byte_end":13590544,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590545,"byte_end":13590548,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590549,"byte_end":13590641,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590642,"byte_end":13590741,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590742,"byte_end":13590842,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590843,"byte_end":13590865,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590866,"byte_end":13590869,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590870,"byte_end":13590963,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590964,"byte_end":13591035,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591036,"byte_end":13591039,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591040,"byte_end":13591047,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591048,"byte_end":13591078,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591079,"byte_end":13591110,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591111,"byte_end":13591114,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591115,"byte_end":13591189,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591190,"byte_end":13591197,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591264,"byte_end":13591269,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591224,"byte_end":13591253,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591323,"byte_end":13591327,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591283,"byte_end":13591313,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591479,"byte_end":13591483,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591334,"byte_end":13591379,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591384,"byte_end":13591387,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591392,"byte_end":13591404,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591409,"byte_end":13591412,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591417,"byte_end":13591464,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591847,"byte_end":13591852,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591517,"byte_end":13591552,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591557,"byte_end":13591560,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591565,"byte_end":13591577,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591582,"byte_end":13591585,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591590,"byte_end":13591666,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591671,"byte_end":13591739,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591744,"byte_end":13591832,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592251,"byte_end":13592260,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591887,"byte_end":13591930,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591935,"byte_end":13591938,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591943,"byte_end":13591955,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591960,"byte_end":13591963,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591968,"byte_end":13592044,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592049,"byte_end":13592117,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592122,"byte_end":13592212,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592217,"byte_end":13592236,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592673,"byte_end":13592677,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592299,"byte_end":13592352,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592357,"byte_end":13592360,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592365,"byte_end":13592377,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592382,"byte_end":13592385,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592390,"byte_end":13592466,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592471,"byte_end":13592539,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592544,"byte_end":13592634,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592639,"byte_end":13592658,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595786,"byte_end":13595792,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595268,"byte_end":13595332,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595333,"byte_end":13595336,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595337,"byte_end":13595435,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595436,"byte_end":13595533,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595534,"byte_end":13595605,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595606,"byte_end":13595609,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595610,"byte_end":13595690,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595691,"byte_end":13595694,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595695,"byte_end":13595774,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596278,"byte_end":13596281,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596045,"byte_end":13596127,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596132,"byte_end":13596135,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596140,"byte_end":13596154,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596159,"byte_end":13596162,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596167,"byte_end":13596174,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596179,"byte_end":13596211,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596216,"byte_end":13596219,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596224,"byte_end":13596254,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596259,"byte_end":13596266,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596625,"byte_end":13596629,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596384,"byte_end":13596466,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596471,"byte_end":13596474,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596479,"byte_end":13596493,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596498,"byte_end":13596501,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596506,"byte_end":13596513,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596518,"byte_end":13596550,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596555,"byte_end":13596558,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596563,"byte_end":13596601,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596606,"byte_end":13596613,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597218,"byte_end":13597222,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596934,"byte_end":13596972,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596977,"byte_end":13596980,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596985,"byte_end":13596999,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597004,"byte_end":13597007,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597012,"byte_end":13597019,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597024,"byte_end":13597056,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597061,"byte_end":13597064,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597069,"byte_end":13597103,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597108,"byte_end":13597115,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597120,"byte_end":13597123,"line_start":345,"line_end":345,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597807,"byte_end":13597811,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597349,"byte_end":13597394,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597399,"byte_end":13597402,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597407,"byte_end":13597497,"line_start":356,"line_end":356,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597502,"byte_end":13597516,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597521,"byte_end":13597524,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597529,"byte_end":13597543,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597548,"byte_end":13597551,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597556,"byte_end":13597563,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597568,"byte_end":13597617,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597622,"byte_end":13597666,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597671,"byte_end":13597674,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597679,"byte_end":13597709,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597714,"byte_end":13597744,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597749,"byte_end":13597783,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597788,"byte_end":13597795,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598818,"byte_end":13598830,"line_start":394,"line_end":394,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597941,"byte_end":13598020,"line_start":373,"line_end":373,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598025,"byte_end":13598028,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598033,"byte_end":13598106,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598111,"byte_end":13598187,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598192,"byte_end":13598263,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598268,"byte_end":13598342,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598347,"byte_end":13598370,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598375,"byte_end":13598378,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598383,"byte_end":13598458,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598463,"byte_end":13598537,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598542,"byte_end":13598576,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598581,"byte_end":13598584,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598589,"byte_end":13598603,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598608,"byte_end":13598611,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598616,"byte_end":13598623,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598628,"byte_end":13598677,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598682,"byte_end":13598685,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598690,"byte_end":13598720,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598725,"byte_end":13598755,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598760,"byte_end":13598794,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598799,"byte_end":13598806,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599438,"byte_end":13599443,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598950,"byte_end":13599015,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599020,"byte_end":13599023,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599028,"byte_end":13599118,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599123,"byte_end":13599137,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599142,"byte_end":13599145,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599150,"byte_end":13599164,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599169,"byte_end":13599172,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599177,"byte_end":13599184,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599189,"byte_end":13599238,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599243,"byte_end":13599287,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599292,"byte_end":13599295,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599300,"byte_end":13599330,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599335,"byte_end":13599371,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599376,"byte_end":13599414,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599419,"byte_end":13599426,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600093,"byte_end":13600097,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599550,"byte_end":13599638,"line_start":417,"line_end":417,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599643,"byte_end":13599656,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599661,"byte_end":13599664,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599669,"byte_end":13599759,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599764,"byte_end":13599778,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599783,"byte_end":13599786,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599791,"byte_end":13599805,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599810,"byte_end":13599813,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599818,"byte_end":13599825,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599830,"byte_end":13599887,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599892,"byte_end":13599936,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599941,"byte_end":13599944,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599949,"byte_end":13599979,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599984,"byte_end":13600014,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600019,"byte_end":13600069,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600074,"byte_end":13600081,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601933,"byte_end":13601949,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600268,"byte_end":13600364,"line_start":437,"line_end":437,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600369,"byte_end":13600463,"line_start":438,"line_end":438,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600468,"byte_end":13600539,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600544,"byte_end":13600547,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600552,"byte_end":13600647,"line_start":441,"line_end":441,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600652,"byte_end":13600743,"line_start":442,"line_end":442,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600748,"byte_end":13600761,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600766,"byte_end":13600769,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600774,"byte_end":13600843,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600848,"byte_end":13600929,"line_start":446,"line_end":446,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600934,"byte_end":13601025,"line_start":447,"line_end":447,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601030,"byte_end":13601120,"line_start":448,"line_end":448,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601125,"byte_end":13601207,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601212,"byte_end":13601290,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601295,"byte_end":13601375,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601380,"byte_end":13601446,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601451,"byte_end":13601454,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601459,"byte_end":13601473,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601478,"byte_end":13601481,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601486,"byte_end":13601493,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601498,"byte_end":13601562,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601567,"byte_end":13601611,"line_start":458,"line_end":458,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601616,"byte_end":13601619,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601624,"byte_end":13601654,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601659,"byte_end":13601662,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601667,"byte_end":13601697,"line_start":462,"line_end":462,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601702,"byte_end":13601739,"line_start":463,"line_end":463,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601744,"byte_end":13601823,"line_start":464,"line_end":464,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601828,"byte_end":13601909,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601914,"byte_end":13601921,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604983,"byte_end":13605004,"line_start":542,"line_end":542,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602611,"byte_end":13602707,"line_start":490,"line_end":490,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602712,"byte_end":13602806,"line_start":491,"line_end":491,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602811,"byte_end":13602882,"line_start":492,"line_end":492,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602887,"byte_end":13602890,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602895,"byte_end":13602990,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602995,"byte_end":13603090,"line_start":495,"line_end":495,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603095,"byte_end":13603185,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603190,"byte_end":13603274,"line_start":497,"line_end":497,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603279,"byte_end":13603282,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603287,"byte_end":13603356,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603361,"byte_end":13603442,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603447,"byte_end":13603538,"line_start":501,"line_end":501,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603543,"byte_end":13603633,"line_start":502,"line_end":502,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603638,"byte_end":13603720,"line_start":503,"line_end":503,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603725,"byte_end":13603803,"line_start":504,"line_end":504,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603808,"byte_end":13603888,"line_start":505,"line_end":505,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603893,"byte_end":13603959,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603964,"byte_end":13603967,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603972,"byte_end":13604022,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604027,"byte_end":13604030,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604035,"byte_end":13604049,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604054,"byte_end":13604057,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604062,"byte_end":13604069,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604074,"byte_end":13604138,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604143,"byte_end":13604187,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604192,"byte_end":13604195,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604200,"byte_end":13604230,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604235,"byte_end":13604265,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604270,"byte_end":13604273,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604278,"byte_end":13604313,"line_start":519,"line_end":519,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604318,"byte_end":13604358,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604363,"byte_end":13604373,"line_start":521,"line_end":521,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604378,"byte_end":13604450,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604455,"byte_end":13604477,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604482,"byte_end":13604506,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604511,"byte_end":13604533,"line_start":525,"line_end":525,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604538,"byte_end":13604551,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604556,"byte_end":13604581,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604586,"byte_end":13604620,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604625,"byte_end":13604655,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604660,"byte_end":13604673,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604678,"byte_end":13604687,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604692,"byte_end":13604697,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604702,"byte_end":13604705,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604710,"byte_end":13604751,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604756,"byte_end":13604766,"line_start":535,"line_end":535,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604771,"byte_end":13604855,"line_start":536,"line_end":536,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604860,"byte_end":13604887,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604892,"byte_end":13604935,"line_start":538,"line_end":538,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604940,"byte_end":13604949,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604954,"byte_end":13604959,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604964,"byte_end":13604971,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607501,"byte_end":13607513,"line_start":604,"line_end":604,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605671,"byte_end":13605755,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605760,"byte_end":13605854,"line_start":566,"line_end":566,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605859,"byte_end":13605862,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605867,"byte_end":13605961,"line_start":568,"line_end":568,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605966,"byte_end":13606060,"line_start":569,"line_end":569,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606065,"byte_end":13606122,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606127,"byte_end":13606130,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606135,"byte_end":13606209,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606214,"byte_end":13606291,"line_start":573,"line_end":573,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606296,"byte_end":13606366,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606371,"byte_end":13606447,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606452,"byte_end":13606511,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606516,"byte_end":13606519,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606524,"byte_end":13606594,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606599,"byte_end":13606674,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606679,"byte_end":13606751,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606756,"byte_end":13606831,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606836,"byte_end":13606857,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606862,"byte_end":13606865,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606870,"byte_end":13606904,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606909,"byte_end":13606943,"line_start":585,"line_end":585,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606948,"byte_end":13606982,"line_start":586,"line_end":586,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606987,"byte_end":13607019,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607024,"byte_end":13607027,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607032,"byte_end":13607046,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607051,"byte_end":13607054,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607059,"byte_end":13607066,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607071,"byte_end":13607120,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607125,"byte_end":13607169,"line_start":593,"line_end":593,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607174,"byte_end":13607177,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607182,"byte_end":13607212,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607217,"byte_end":13607247,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607252,"byte_end":13607255,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607260,"byte_end":13607338,"line_start":598,"line_end":598,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607343,"byte_end":13607369,"line_start":599,"line_end":599,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607374,"byte_end":13607377,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607382,"byte_end":13607445,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607450,"byte_end":13607477,"line_start":602,"line_end":602,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607482,"byte_end":13607489,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609813,"byte_end":13609828,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608111,"byte_end":13608207,"line_start":624,"line_end":624,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608212,"byte_end":13608306,"line_start":625,"line_end":625,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608311,"byte_end":13608382,"line_start":626,"line_end":626,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608387,"byte_end":13608390,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608395,"byte_end":13608490,"line_start":628,"line_end":628,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608495,"byte_end":13608586,"line_start":629,"line_end":629,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608591,"byte_end":13608604,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608609,"byte_end":13608612,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608617,"byte_end":13608702,"line_start":632,"line_end":632,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608707,"byte_end":13608738,"line_start":633,"line_end":633,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608743,"byte_end":13608746,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608751,"byte_end":13608788,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608793,"byte_end":13608796,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608801,"byte_end":13608889,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608894,"byte_end":13608915,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608920,"byte_end":13608923,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608928,"byte_end":13608960,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608965,"byte_end":13608997,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609002,"byte_end":13609034,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609039,"byte_end":13609071,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609076,"byte_end":13609108,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609113,"byte_end":13609145,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609150,"byte_end":13609181,"line_start":646,"line_end":646,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609186,"byte_end":13609189,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609194,"byte_end":13609208,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609213,"byte_end":13609216,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609221,"byte_end":13609228,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609233,"byte_end":13609260,"line_start":651,"line_end":651,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609265,"byte_end":13609329,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609334,"byte_end":13609378,"line_start":653,"line_end":653,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609383,"byte_end":13609386,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609391,"byte_end":13609421,"line_start":655,"line_end":655,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609426,"byte_end":13609429,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609434,"byte_end":13609464,"line_start":657,"line_end":657,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609469,"byte_end":13609506,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609511,"byte_end":13609581,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609586,"byte_end":13609658,"line_start":660,"line_end":660,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609663,"byte_end":13609670,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609722,"byte_end":13609742,"line_start":663,"line_end":663,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609747,"byte_end":13609801,"line_start":664,"line_end":664,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612597,"byte_end":13612617,"line_start":742,"line_end":742,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610171,"byte_end":13610267,"line_start":679,"line_end":679,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610272,"byte_end":13610366,"line_start":680,"line_end":680,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610371,"byte_end":13610442,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610447,"byte_end":13610450,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610455,"byte_end":13610549,"line_start":683,"line_end":683,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610554,"byte_end":13610649,"line_start":684,"line_end":684,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610654,"byte_end":13610744,"line_start":685,"line_end":685,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610749,"byte_end":13610833,"line_start":686,"line_end":686,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610838,"byte_end":13610841,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610846,"byte_end":13610931,"line_start":688,"line_end":688,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610936,"byte_end":13610967,"line_start":689,"line_end":689,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610972,"byte_end":13610975,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610980,"byte_end":13611028,"line_start":691,"line_end":691,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611033,"byte_end":13611036,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611041,"byte_end":13611083,"line_start":693,"line_end":693,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611088,"byte_end":13611091,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611096,"byte_end":13611194,"line_start":695,"line_end":695,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611199,"byte_end":13611220,"line_start":696,"line_end":696,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611225,"byte_end":13611228,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611233,"byte_end":13611265,"line_start":698,"line_end":698,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611270,"byte_end":13611302,"line_start":699,"line_end":699,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611307,"byte_end":13611339,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611344,"byte_end":13611376,"line_start":701,"line_end":701,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611381,"byte_end":13611413,"line_start":702,"line_end":702,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611418,"byte_end":13611450,"line_start":703,"line_end":703,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611455,"byte_end":13611486,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611491,"byte_end":13611494,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611499,"byte_end":13611513,"line_start":706,"line_end":706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611518,"byte_end":13611521,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611526,"byte_end":13611533,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611538,"byte_end":13611565,"line_start":709,"line_end":709,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611570,"byte_end":13611634,"line_start":710,"line_end":710,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611639,"byte_end":13611683,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611688,"byte_end":13611691,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611696,"byte_end":13611726,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611731,"byte_end":13611761,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611766,"byte_end":13611769,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611774,"byte_end":13611809,"line_start":716,"line_end":716,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611814,"byte_end":13611854,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611859,"byte_end":13611869,"line_start":718,"line_end":718,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611874,"byte_end":13611937,"line_start":719,"line_end":719,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611942,"byte_end":13611964,"line_start":720,"line_end":720,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611969,"byte_end":13611993,"line_start":721,"line_end":721,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611998,"byte_end":13612020,"line_start":722,"line_end":722,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612025,"byte_end":13612038,"line_start":723,"line_end":723,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612043,"byte_end":13612068,"line_start":724,"line_end":724,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612073,"byte_end":13612107,"line_start":725,"line_end":725,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612112,"byte_end":13612142,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612147,"byte_end":13612160,"line_start":727,"line_end":727,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612165,"byte_end":13612174,"line_start":728,"line_end":728,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612179,"byte_end":13612184,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612189,"byte_end":13612192,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612197,"byte_end":13612238,"line_start":731,"line_end":731,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612243,"byte_end":13612253,"line_start":732,"line_end":732,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612258,"byte_end":13612333,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612338,"byte_end":13612365,"line_start":734,"line_end":734,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612370,"byte_end":13612413,"line_start":735,"line_end":735,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612418,"byte_end":13612427,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612432,"byte_end":13612437,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612442,"byte_end":13612449,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612501,"byte_end":13612521,"line_start":740,"line_end":740,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612526,"byte_end":13612585,"line_start":741,"line_end":741,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613696,"byte_end":13613705,"line_start":775,"line_end":775,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612965,"byte_end":13613004,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613009,"byte_end":13613012,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613017,"byte_end":13613111,"line_start":758,"line_end":758,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613116,"byte_end":13613172,"line_start":759,"line_end":759,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613177,"byte_end":13613180,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613185,"byte_end":13613275,"line_start":761,"line_end":761,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613280,"byte_end":13613294,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613299,"byte_end":13613302,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613307,"byte_end":13613321,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613326,"byte_end":13613329,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613334,"byte_end":13613341,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613346,"byte_end":13613403,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613408,"byte_end":13613452,"line_start":768,"line_end":768,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613457,"byte_end":13613460,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613465,"byte_end":13613525,"line_start":770,"line_end":770,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613530,"byte_end":13613560,"line_start":771,"line_end":771,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613565,"byte_end":13613620,"line_start":772,"line_end":772,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613625,"byte_end":13613672,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613677,"byte_end":13613684,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614604,"byte_end":13614612,"line_start":798,"line_end":798,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613876,"byte_end":13613914,"line_start":779,"line_end":779,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613919,"byte_end":13613922,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613927,"byte_end":13614020,"line_start":781,"line_end":781,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614025,"byte_end":13614081,"line_start":782,"line_end":782,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614086,"byte_end":13614089,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614094,"byte_end":13614184,"line_start":784,"line_end":784,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614189,"byte_end":13614203,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614208,"byte_end":13614211,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614216,"byte_end":13614230,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614235,"byte_end":13614238,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614243,"byte_end":13614250,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614255,"byte_end":13614312,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614317,"byte_end":13614361,"line_start":791,"line_end":791,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614366,"byte_end":13614369,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614374,"byte_end":13614434,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614439,"byte_end":13614469,"line_start":794,"line_end":794,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614474,"byte_end":13614528,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614533,"byte_end":13614580,"line_start":796,"line_end":796,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614585,"byte_end":13614592,"line_start":797,"line_end":797,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615512,"byte_end":13615521,"line_start":821,"line_end":821,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614781,"byte_end":13614820,"line_start":802,"line_end":802,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614825,"byte_end":13614828,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614833,"byte_end":13614927,"line_start":804,"line_end":804,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614932,"byte_end":13614988,"line_start":805,"line_end":805,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614993,"byte_end":13614996,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615001,"byte_end":13615091,"line_start":807,"line_end":807,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615096,"byte_end":13615110,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615115,"byte_end":13615118,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615123,"byte_end":13615137,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615142,"byte_end":13615145,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615150,"byte_end":13615157,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615162,"byte_end":13615219,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615224,"byte_end":13615268,"line_start":814,"line_end":814,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615273,"byte_end":13615276,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615281,"byte_end":13615341,"line_start":816,"line_end":816,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615346,"byte_end":13615376,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615381,"byte_end":13615436,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615441,"byte_end":13615488,"line_start":819,"line_end":819,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615493,"byte_end":13615500,"line_start":820,"line_end":820,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616818,"byte_end":13616828,"line_start":859,"line_end":859,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615691,"byte_end":13615726,"line_start":825,"line_end":825,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615731,"byte_end":13615734,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615739,"byte_end":13615828,"line_start":827,"line_end":827,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615833,"byte_end":13615919,"line_start":828,"line_end":828,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615924,"byte_end":13615959,"line_start":829,"line_end":829,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615964,"byte_end":13615967,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615972,"byte_end":13615984,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615989,"byte_end":13615992,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615997,"byte_end":13616056,"line_start":833,"line_end":833,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616061,"byte_end":13616064,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616069,"byte_end":13616081,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616086,"byte_end":13616089,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616094,"byte_end":13616181,"line_start":837,"line_end":837,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616186,"byte_end":13616219,"line_start":838,"line_end":838,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616224,"byte_end":13616227,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616232,"byte_end":13616246,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616251,"byte_end":13616254,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616259,"byte_end":13616270,"line_start":842,"line_end":842,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616275,"byte_end":13616294,"line_start":843,"line_end":843,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616299,"byte_end":13616333,"line_start":844,"line_end":844,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616338,"byte_end":13616364,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616369,"byte_end":13616396,"line_start":846,"line_end":846,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616401,"byte_end":13616406,"line_start":847,"line_end":847,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616411,"byte_end":13616414,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616419,"byte_end":13616452,"line_start":849,"line_end":849,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616457,"byte_end":13616485,"line_start":850,"line_end":850,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616490,"byte_end":13616584,"line_start":851,"line_end":851,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616589,"byte_end":13616636,"line_start":852,"line_end":852,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616641,"byte_end":13616661,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616666,"byte_end":13616745,"line_start":854,"line_end":854,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616750,"byte_end":13616763,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616768,"byte_end":13616777,"line_start":856,"line_end":856,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616782,"byte_end":13616787,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616792,"byte_end":13616799,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619845,"byte_end":13619852,"line_start":972,"line_end":972,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619782,"byte_end":13619834,"line_start":971,"line_end":971,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619944,"byte_end":13619954,"line_start":974,"line_end":974,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619882,"byte_end":13619936,"line_start":973,"line_end":973,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620261,"byte_end":13620271,"line_start":982,"line_end":982,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619976,"byte_end":13620040,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620045,"byte_end":13620048,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620053,"byte_end":13620065,"line_start":978,"line_end":978,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620070,"byte_end":13620073,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620078,"byte_end":13620173,"line_start":980,"line_end":980,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620178,"byte_end":13620246,"line_start":981,"line_end":981,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620537,"byte_end":13620542,"line_start":991,"line_end":991,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620297,"byte_end":13620332,"line_start":985,"line_end":985,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620333,"byte_end":13620336,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620337,"byte_end":13620379,"line_start":987,"line_end":987,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620380,"byte_end":13620383,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620384,"byte_end":13620482,"line_start":989,"line_end":989,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620483,"byte_end":13620525,"line_start":990,"line_end":990,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621940,"byte_end":13621948,"line_start":1042,"line_end":1042,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621192,"byte_end":13621242,"line_start":1020,"line_end":1020,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621247,"byte_end":13621250,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621255,"byte_end":13621347,"line_start":1022,"line_end":1022,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621352,"byte_end":13621445,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621450,"byte_end":13621475,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621480,"byte_end":13621483,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621488,"byte_end":13621500,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621505,"byte_end":13621508,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621513,"byte_end":13621557,"line_start":1028,"line_end":1028,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621562,"byte_end":13621565,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621570,"byte_end":13621582,"line_start":1030,"line_end":1030,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621587,"byte_end":13621590,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621595,"byte_end":13621691,"line_start":1032,"line_end":1032,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621696,"byte_end":13621743,"line_start":1033,"line_end":1033,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621748,"byte_end":13621751,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621756,"byte_end":13621770,"line_start":1035,"line_end":1035,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621775,"byte_end":13621778,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621783,"byte_end":13621790,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621795,"byte_end":13621826,"line_start":1038,"line_end":1038,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621831,"byte_end":13621834,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621839,"byte_end":13621909,"line_start":1040,"line_end":1040,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621914,"byte_end":13621921,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622346,"byte_end":13622354,"line_start":1059,"line_end":1059,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622083,"byte_end":13622127,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622132,"byte_end":13622135,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622140,"byte_end":13622154,"line_start":1050,"line_end":1050,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622159,"byte_end":13622162,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622167,"byte_end":13622174,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622179,"byte_end":13622210,"line_start":1053,"line_end":1053,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622215,"byte_end":13622218,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622223,"byte_end":13622252,"line_start":1055,"line_end":1055,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622257,"byte_end":13622292,"line_start":1056,"line_end":1056,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622297,"byte_end":13622322,"line_start":1057,"line_end":1057,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622327,"byte_end":13622334,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622743,"byte_end":13622746,"line_start":1074,"line_end":1074,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622513,"byte_end":13622594,"line_start":1065,"line_end":1065,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622599,"byte_end":13622602,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622607,"byte_end":13622621,"line_start":1067,"line_end":1067,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622626,"byte_end":13622629,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622634,"byte_end":13622641,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622646,"byte_end":13622677,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622682,"byte_end":13622685,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622690,"byte_end":13622719,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622724,"byte_end":13622731,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623085,"byte_end":13623089,"line_start":1089,"line_end":1089,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622847,"byte_end":13622928,"line_start":1080,"line_end":1080,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622933,"byte_end":13622936,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622941,"byte_end":13622955,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622960,"byte_end":13622963,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622968,"byte_end":13622975,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622980,"byte_end":13623011,"line_start":1085,"line_end":1085,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623016,"byte_end":13623019,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623024,"byte_end":13623061,"line_start":1087,"line_end":1087,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623066,"byte_end":13623073,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623510,"byte_end":13623521,"line_start":1105,"line_end":1105,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623181,"byte_end":13623230,"line_start":1093,"line_end":1093,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623235,"byte_end":13623238,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623243,"byte_end":13623257,"line_start":1095,"line_end":1095,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623262,"byte_end":13623265,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623270,"byte_end":13623277,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623282,"byte_end":13623330,"line_start":1098,"line_end":1098,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623335,"byte_end":13623338,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623343,"byte_end":13623372,"line_start":1100,"line_end":1100,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623377,"byte_end":13623407,"line_start":1101,"line_end":1101,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623412,"byte_end":13623445,"line_start":1102,"line_end":1102,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623450,"byte_end":13623457,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623462,"byte_end":13623498,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623841,"byte_end":13623844,"line_start":1118,"line_end":1118,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623633,"byte_end":13623679,"line_start":1109,"line_end":1109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623684,"byte_end":13623687,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623692,"byte_end":13623706,"line_start":1111,"line_end":1111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623711,"byte_end":13623714,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623719,"byte_end":13623726,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623731,"byte_end":13623762,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623767,"byte_end":13623770,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623775,"byte_end":13623817,"line_start":1116,"line_end":1116,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623822,"byte_end":13623829,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624317,"byte_end":13624325,"line_start":1136,"line_end":1136,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623940,"byte_end":13624030,"line_start":1123,"line_end":1123,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624035,"byte_end":13624073,"line_start":1124,"line_end":1124,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624078,"byte_end":13624081,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624086,"byte_end":13624100,"line_start":1126,"line_end":1126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624105,"byte_end":13624108,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624113,"byte_end":13624120,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624125,"byte_end":13624156,"line_start":1129,"line_end":1129,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624161,"byte_end":13624164,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624169,"byte_end":13624198,"line_start":1131,"line_end":1131,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624203,"byte_end":13624230,"line_start":1132,"line_end":1132,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624235,"byte_end":13624261,"line_start":1133,"line_end":1133,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624266,"byte_end":13624293,"line_start":1134,"line_end":1134,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624298,"byte_end":13624305,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":303},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626787,"byte_end":13626793,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626508,"byte_end":13626561,"line_start":1233,"line_end":1233,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626562,"byte_end":13626565,"line_start":1234,"line_end":1234,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626566,"byte_end":13626629,"line_start":1235,"line_end":1235,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626630,"byte_end":13626633,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626634,"byte_end":13626732,"line_start":1237,"line_end":1237,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626733,"byte_end":13626775,"line_start":1238,"line_end":1238,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627915,"byte_end":13627921,"line_start":1287,"line_end":1287,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627445,"byte_end":13627505,"line_start":1271,"line_end":1271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627510,"byte_end":13627513,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627518,"byte_end":13627532,"line_start":1273,"line_end":1273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627537,"byte_end":13627540,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627545,"byte_end":13627552,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627557,"byte_end":13627613,"line_start":1276,"line_end":1276,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627618,"byte_end":13627662,"line_start":1277,"line_end":1277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627667,"byte_end":13627670,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627675,"byte_end":13627704,"line_start":1279,"line_end":1279,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627709,"byte_end":13627739,"line_start":1280,"line_end":1280,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627744,"byte_end":13627772,"line_start":1281,"line_end":1281,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627777,"byte_end":13627780,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627785,"byte_end":13627815,"line_start":1283,"line_end":1283,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627820,"byte_end":13627854,"line_start":1284,"line_end":1284,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627859,"byte_end":13627891,"line_start":1285,"line_end":1285,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627896,"byte_end":13627903,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628298,"byte_end":13628302,"line_start":1304,"line_end":1304,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628082,"byte_end":13628113,"line_start":1294,"line_end":1294,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628118,"byte_end":13628121,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628126,"byte_end":13628140,"line_start":1296,"line_end":1296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628145,"byte_end":13628148,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628153,"byte_end":13628160,"line_start":1298,"line_end":1298,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628165,"byte_end":13628197,"line_start":1299,"line_end":1299,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628202,"byte_end":13628205,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628210,"byte_end":13628244,"line_start":1301,"line_end":1301,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628249,"byte_end":13628274,"line_start":1302,"line_end":1302,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628279,"byte_end":13628286,"line_start":1303,"line_end":1303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628859,"byte_end":13628866,"line_start":1325,"line_end":1325,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628417,"byte_end":13628459,"line_start":1311,"line_end":1311,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628464,"byte_end":13628467,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628472,"byte_end":13628486,"line_start":1313,"line_end":1313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628491,"byte_end":13628494,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628499,"byte_end":13628506,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628511,"byte_end":13628567,"line_start":1316,"line_end":1316,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628572,"byte_end":13628616,"line_start":1317,"line_end":1317,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628621,"byte_end":13628624,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628629,"byte_end":13628656,"line_start":1319,"line_end":1319,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628661,"byte_end":13628691,"line_start":1320,"line_end":1320,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628696,"byte_end":13628741,"line_start":1321,"line_end":1321,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628746,"byte_end":13628784,"line_start":1322,"line_end":1322,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628789,"byte_end":13628835,"line_start":1323,"line_end":1323,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628840,"byte_end":13628847,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630146,"byte_end":13630151,"line_start":1361,"line_end":1361,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628966,"byte_end":13628995,"line_start":1330,"line_end":1330,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629000,"byte_end":13629003,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629008,"byte_end":13629086,"line_start":1332,"line_end":1332,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629091,"byte_end":13629094,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629099,"byte_end":13629111,"line_start":1334,"line_end":1334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629116,"byte_end":13629119,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629124,"byte_end":13629209,"line_start":1336,"line_end":1336,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629214,"byte_end":13629217,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629222,"byte_end":13629313,"line_start":1338,"line_end":1338,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629318,"byte_end":13629367,"line_start":1339,"line_end":1339,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629372,"byte_end":13629375,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629380,"byte_end":13629452,"line_start":1341,"line_end":1341,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629457,"byte_end":13629532,"line_start":1342,"line_end":1342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629537,"byte_end":13629540,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629545,"byte_end":13629638,"line_start":1344,"line_end":1344,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629643,"byte_end":13629736,"line_start":1345,"line_end":1345,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629741,"byte_end":13629779,"line_start":1346,"line_end":1346,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629784,"byte_end":13629787,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629792,"byte_end":13629806,"line_start":1348,"line_end":1348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629811,"byte_end":13629814,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629819,"byte_end":13629826,"line_start":1350,"line_end":1350,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629831,"byte_end":13629880,"line_start":1351,"line_end":1351,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629885,"byte_end":13629929,"line_start":1352,"line_end":1352,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629934,"byte_end":13629937,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629942,"byte_end":13629972,"line_start":1354,"line_end":1354,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629977,"byte_end":13630007,"line_start":1355,"line_end":1355,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630012,"byte_end":13630046,"line_start":1356,"line_end":1356,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630051,"byte_end":13630063,"line_start":1357,"line_end":1357,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630068,"byte_end":13630105,"line_start":1358,"line_end":1358,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630110,"byte_end":13630115,"line_start":1359,"line_end":1359,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630120,"byte_end":13630127,"line_start":1360,"line_end":1360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631417,"byte_end":13631426,"line_start":1402,"line_end":1402,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630257,"byte_end":13630286,"line_start":1366,"line_end":1366,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630291,"byte_end":13630294,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630299,"byte_end":13630385,"line_start":1368,"line_end":1368,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630390,"byte_end":13630393,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630398,"byte_end":13630410,"line_start":1370,"line_end":1370,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630415,"byte_end":13630418,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630423,"byte_end":13630518,"line_start":1372,"line_end":1372,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630523,"byte_end":13630560,"line_start":1373,"line_end":1373,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630565,"byte_end":13630568,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630573,"byte_end":13630662,"line_start":1375,"line_end":1375,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630667,"byte_end":13630670,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630675,"byte_end":13630749,"line_start":1377,"line_end":1377,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630754,"byte_end":13630757,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630762,"byte_end":13630776,"line_start":1379,"line_end":1379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630781,"byte_end":13630784,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630789,"byte_end":13630796,"line_start":1381,"line_end":1381,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630801,"byte_end":13630850,"line_start":1382,"line_end":1382,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630855,"byte_end":13630899,"line_start":1383,"line_end":1383,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630904,"byte_end":13630907,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630912,"byte_end":13630954,"line_start":1385,"line_end":1385,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630959,"byte_end":13630989,"line_start":1386,"line_end":1386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630994,"byte_end":13630997,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631002,"byte_end":13631040,"line_start":1388,"line_end":1388,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631045,"byte_end":13631057,"line_start":1389,"line_end":1389,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631062,"byte_end":13631092,"line_start":1390,"line_end":1390,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631097,"byte_end":13631127,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631132,"byte_end":13631173,"line_start":1392,"line_end":1392,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631178,"byte_end":13631196,"line_start":1393,"line_end":1393,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631201,"byte_end":13631245,"line_start":1394,"line_end":1394,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631250,"byte_end":13631255,"line_start":1395,"line_end":1395,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631260,"byte_end":13631263,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631268,"byte_end":13631302,"line_start":1397,"line_end":1397,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631307,"byte_end":13631319,"line_start":1398,"line_end":1398,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631324,"byte_end":13631376,"line_start":1399,"line_end":1399,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631381,"byte_end":13631386,"line_start":1400,"line_end":1400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631391,"byte_end":13631398,"line_start":1401,"line_end":1401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632759,"byte_end":13632765,"line_start":1438,"line_end":1438,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631544,"byte_end":13631584,"line_start":1407,"line_end":1407,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631589,"byte_end":13631592,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631597,"byte_end":13631692,"line_start":1409,"line_end":1409,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631697,"byte_end":13631700,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631705,"byte_end":13631717,"line_start":1411,"line_end":1411,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631722,"byte_end":13631725,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631730,"byte_end":13631815,"line_start":1413,"line_end":1413,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631820,"byte_end":13631823,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631828,"byte_end":13631919,"line_start":1415,"line_end":1415,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631924,"byte_end":13631973,"line_start":1416,"line_end":1416,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631978,"byte_end":13631981,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631986,"byte_end":13632058,"line_start":1418,"line_end":1418,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632063,"byte_end":13632138,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632143,"byte_end":13632146,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632151,"byte_end":13632244,"line_start":1421,"line_end":1421,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632249,"byte_end":13632342,"line_start":1422,"line_end":1422,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632347,"byte_end":13632385,"line_start":1423,"line_end":1423,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632390,"byte_end":13632393,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632398,"byte_end":13632412,"line_start":1425,"line_end":1425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632417,"byte_end":13632420,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632425,"byte_end":13632432,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632437,"byte_end":13632486,"line_start":1428,"line_end":1428,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632491,"byte_end":13632535,"line_start":1429,"line_end":1429,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632540,"byte_end":13632543,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632548,"byte_end":13632578,"line_start":1431,"line_end":1431,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632583,"byte_end":13632613,"line_start":1432,"line_end":1432,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632618,"byte_end":13632652,"line_start":1433,"line_end":1433,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632657,"byte_end":13632669,"line_start":1434,"line_end":1434,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632674,"byte_end":13632718,"line_start":1435,"line_end":1435,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632723,"byte_end":13632728,"line_start":1436,"line_end":1436,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632733,"byte_end":13632740,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633625,"byte_end":13633635,"line_start":1471,"line_end":1471,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632955,"byte_end":13632990,"line_start":1447,"line_end":1447,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632995,"byte_end":13632998,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633003,"byte_end":13633015,"line_start":1449,"line_end":1449,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633020,"byte_end":13633023,"line_start":1450,"line_end":1450,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633028,"byte_end":13633087,"line_start":1451,"line_end":1451,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633092,"byte_end":13633095,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633100,"byte_end":13633112,"line_start":1453,"line_end":1453,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633117,"byte_end":13633120,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633125,"byte_end":13633212,"line_start":1455,"line_end":1455,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633217,"byte_end":13633250,"line_start":1456,"line_end":1456,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633255,"byte_end":13633258,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633263,"byte_end":13633277,"line_start":1458,"line_end":1458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633282,"byte_end":13633285,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633290,"byte_end":13633297,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633302,"byte_end":13633351,"line_start":1461,"line_end":1461,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633356,"byte_end":13633400,"line_start":1462,"line_end":1462,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633405,"byte_end":13633408,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633413,"byte_end":13633443,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633448,"byte_end":13633460,"line_start":1465,"line_end":1465,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633465,"byte_end":13633507,"line_start":1466,"line_end":1466,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633512,"byte_end":13633550,"line_start":1467,"line_end":1467,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633555,"byte_end":13633584,"line_start":1468,"line_end":1468,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633589,"byte_end":13633594,"line_start":1469,"line_end":1469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633599,"byte_end":13633606,"line_start":1470,"line_end":1470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634195,"byte_end":13634198,"line_start":1489,"line_end":1489,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633787,"byte_end":13633833,"line_start":1476,"line_end":1476,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633838,"byte_end":13633841,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633846,"byte_end":13633860,"line_start":1478,"line_end":1478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633865,"byte_end":13633868,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633873,"byte_end":13633880,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633885,"byte_end":13633941,"line_start":1481,"line_end":1481,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633946,"byte_end":13633990,"line_start":1482,"line_end":1482,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633995,"byte_end":13633998,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634003,"byte_end":13634065,"line_start":1484,"line_end":1484,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634070,"byte_end":13634100,"line_start":1485,"line_end":1485,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634105,"byte_end":13634139,"line_start":1486,"line_end":1486,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634144,"byte_end":13634171,"line_start":1487,"line_end":1487,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634176,"byte_end":13634183,"line_start":1488,"line_end":1488,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634872,"byte_end":13634880,"line_start":1512,"line_end":1512,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634294,"byte_end":13634384,"line_start":1494,"line_end":1494,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634389,"byte_end":13634427,"line_start":1495,"line_end":1495,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634432,"byte_end":13634435,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634440,"byte_end":13634454,"line_start":1497,"line_end":1497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634459,"byte_end":13634462,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634467,"byte_end":13634474,"line_start":1499,"line_end":1499,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634479,"byte_end":13634528,"line_start":1500,"line_end":1500,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634533,"byte_end":13634577,"line_start":1501,"line_end":1501,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634582,"byte_end":13634585,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634590,"byte_end":13634620,"line_start":1503,"line_end":1503,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634625,"byte_end":13634655,"line_start":1504,"line_end":1504,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634660,"byte_end":13634695,"line_start":1505,"line_end":1505,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634700,"byte_end":13634728,"line_start":1506,"line_end":1506,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634733,"byte_end":13634736,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634741,"byte_end":13634769,"line_start":1508,"line_end":1508,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634774,"byte_end":13634802,"line_start":1509,"line_end":1509,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634807,"byte_end":13634848,"line_start":1510,"line_end":1510,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634853,"byte_end":13634860,"line_start":1511,"line_end":1511,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13637809,"byte_end":13637818,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13637760,"byte_end":13637797,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638125,"byte_end":13638128,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638085,"byte_end":13638113,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638233,"byte_end":13638241,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638176,"byte_end":13638221,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638909,"byte_end":13638920,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":391}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638861,"byte_end":13638897,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639031,"byte_end":13639034,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638985,"byte_end":13639005,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639010,"byte_end":13639019,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639172,"byte_end":13639181,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639103,"byte_end":13639146,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639151,"byte_end":13639160,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639337,"byte_end":13639346,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639255,"byte_end":13639311,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639316,"byte_end":13639325,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":478},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659998,"byte_end":13660003,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":479}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658282,"byte_end":13658331,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658332,"byte_end":13658335,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658336,"byte_end":13658349,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658350,"byte_end":13658353,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658354,"byte_end":13658433,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658434,"byte_end":13658437,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658438,"byte_end":13658445,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658446,"byte_end":13658479,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658480,"byte_end":13658483,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658484,"byte_end":13658582,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658583,"byte_end":13658675,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658676,"byte_end":13658706,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658707,"byte_end":13658714,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658715,"byte_end":13658718,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658719,"byte_end":13658795,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658796,"byte_end":13658799,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658800,"byte_end":13658827,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658828,"byte_end":13658831,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658832,"byte_end":13658919,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658920,"byte_end":13658936,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658937,"byte_end":13658940,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658941,"byte_end":13658948,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658949,"byte_end":13658998,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13658999,"byte_end":13659043,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659044,"byte_end":13659047,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659048,"byte_end":13659086,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659087,"byte_end":13659116,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659117,"byte_end":13659120,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659121,"byte_end":13659151,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659152,"byte_end":13659182,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659183,"byte_end":13659186,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659187,"byte_end":13659261,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659262,"byte_end":13659296,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659297,"byte_end":13659300,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659301,"byte_end":13659352,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659353,"byte_end":13659399,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659400,"byte_end":13659443,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659444,"byte_end":13659449,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659450,"byte_end":13659457,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659458,"byte_end":13659461,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659462,"byte_end":13659483,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659484,"byte_end":13659487,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659488,"byte_end":13659583,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659584,"byte_end":13659682,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659683,"byte_end":13659702,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659703,"byte_end":13659706,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659707,"byte_end":13659714,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659715,"byte_end":13659748,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659749,"byte_end":13659752,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659753,"byte_end":13659783,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659784,"byte_end":13659814,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659815,"byte_end":13659847,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659848,"byte_end":13659865,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659866,"byte_end":13659898,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659899,"byte_end":13659916,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659917,"byte_end":13659950,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659951,"byte_end":13659958,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659959,"byte_end":13659962,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659963,"byte_end":13659986,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660978,"byte_end":13660983,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660062,"byte_end":13660151,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660156,"byte_end":13660181,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660186,"byte_end":13660189,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660194,"byte_end":13660287,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660292,"byte_end":13660380,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660385,"byte_end":13660475,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660480,"byte_end":13660520,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660525,"byte_end":13660528,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660533,"byte_end":13660623,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660628,"byte_end":13660719,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660724,"byte_end":13660811,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660816,"byte_end":13660836,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660841,"byte_end":13660844,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660849,"byte_end":13660936,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660941,"byte_end":13660966,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665283,"byte_end":13665298,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661147,"byte_end":13661236,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661241,"byte_end":13661266,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661271,"byte_end":13661274,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661279,"byte_end":13661372,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661377,"byte_end":13661465,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661470,"byte_end":13661560,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661565,"byte_end":13661605,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661610,"byte_end":13661613,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661618,"byte_end":13661708,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661713,"byte_end":13661804,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661809,"byte_end":13661896,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661901,"byte_end":13661921,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661926,"byte_end":13661929,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661934,"byte_end":13662021,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662026,"byte_end":13662051,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662056,"byte_end":13662059,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662064,"byte_end":13662076,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662081,"byte_end":13662084,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662089,"byte_end":13662181,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662186,"byte_end":13662273,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662278,"byte_end":13662290,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662295,"byte_end":13662298,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662303,"byte_end":13662310,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662315,"byte_end":13662348,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662353,"byte_end":13662356,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662361,"byte_end":13662391,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662396,"byte_end":13662423,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662428,"byte_end":13662440,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662445,"byte_end":13662520,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662525,"byte_end":13662564,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662569,"byte_end":13662605,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662610,"byte_end":13662621,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662626,"byte_end":13662631,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662636,"byte_end":13662643,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662648,"byte_end":13662651,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662656,"byte_end":13662750,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662755,"byte_end":13662786,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662791,"byte_end":13662794,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662799,"byte_end":13662894,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662899,"byte_end":13662991,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662996,"byte_end":13663085,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663090,"byte_end":13663093,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663098,"byte_end":13663111,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663116,"byte_end":13663169,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663174,"byte_end":13663256,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663261,"byte_end":13663268,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663273,"byte_end":13663276,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663281,"byte_end":13663374,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663379,"byte_end":13663474,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663479,"byte_end":13663539,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663544,"byte_end":13663547,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663552,"byte_end":13663566,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663571,"byte_end":13663574,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663579,"byte_end":13663665,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663670,"byte_end":13663764,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663769,"byte_end":13663865,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663870,"byte_end":13663962,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663967,"byte_end":13664023,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664028,"byte_end":13664031,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664036,"byte_end":13664043,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664048,"byte_end":13664104,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664109,"byte_end":13664153,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664158,"byte_end":13664161,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664166,"byte_end":13664197,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664202,"byte_end":13664205,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664210,"byte_end":13664287,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664292,"byte_end":13664323,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664328,"byte_end":13664331,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664336,"byte_end":13664366,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664371,"byte_end":13664401,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664406,"byte_end":13664409,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664414,"byte_end":13664491,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664496,"byte_end":13664568,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664573,"byte_end":13664576,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664581,"byte_end":13664602,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664607,"byte_end":13664667,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664672,"byte_end":13664754,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664759,"byte_end":13664775,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664780,"byte_end":13664859,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664864,"byte_end":13664907,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664912,"byte_end":13664980,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664985,"byte_end":13665077,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665082,"byte_end":13665166,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665171,"byte_end":13665208,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665213,"byte_end":13665228,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665233,"byte_end":13665242,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665247,"byte_end":13665252,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665257,"byte_end":13665264,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668885,"byte_end":13668898,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665537,"byte_end":13665630,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665635,"byte_end":13665687,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665692,"byte_end":13665695,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665700,"byte_end":13665793,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665798,"byte_end":13665888,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665893,"byte_end":13665982,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665987,"byte_end":13666041,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666046,"byte_end":13666049,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666054,"byte_end":13666147,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666152,"byte_end":13666245,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666250,"byte_end":13666343,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666348,"byte_end":13666379,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666384,"byte_end":13666387,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666392,"byte_end":13666481,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666486,"byte_end":13666511,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666516,"byte_end":13666519,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666524,"byte_end":13666536,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666541,"byte_end":13666544,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666549,"byte_end":13666642,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666647,"byte_end":13666680,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666685,"byte_end":13666688,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666693,"byte_end":13666788,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666793,"byte_end":13666831,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666836,"byte_end":13666839,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666844,"byte_end":13666939,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666944,"byte_end":13667036,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667041,"byte_end":13667130,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667135,"byte_end":13667138,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667143,"byte_end":13667156,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667161,"byte_end":13667214,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667219,"byte_end":13667278,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667283,"byte_end":13667290,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667295,"byte_end":13667298,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667303,"byte_end":13667397,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667402,"byte_end":13667489,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667494,"byte_end":13667554,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667559,"byte_end":13667562,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667567,"byte_end":13667581,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667586,"byte_end":13667589,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667594,"byte_end":13667680,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667685,"byte_end":13667779,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667784,"byte_end":13667880,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667885,"byte_end":13667977,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667982,"byte_end":13668038,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668043,"byte_end":13668046,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668051,"byte_end":13668058,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668063,"byte_end":13668119,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668124,"byte_end":13668168,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668173,"byte_end":13668176,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668181,"byte_end":13668212,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668217,"byte_end":13668220,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668225,"byte_end":13668302,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668307,"byte_end":13668338,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668343,"byte_end":13668346,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668351,"byte_end":13668381,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668386,"byte_end":13668416,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668421,"byte_end":13668424,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668429,"byte_end":13668506,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668511,"byte_end":13668583,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668588,"byte_end":13668591,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668596,"byte_end":13668617,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668622,"byte_end":13668682,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668687,"byte_end":13668769,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668774,"byte_end":13668790,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668795,"byte_end":13668830,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668835,"byte_end":13668844,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668849,"byte_end":13668854,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668859,"byte_end":13668866,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669783,"byte_end":13669788,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668998,"byte_end":13669093,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669098,"byte_end":13669115,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669120,"byte_end":13669123,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669128,"byte_end":13669222,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669227,"byte_end":13669319,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669324,"byte_end":13669392,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669397,"byte_end":13669400,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669405,"byte_end":13669497,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669502,"byte_end":13669505,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669510,"byte_end":13669524,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669529,"byte_end":13669532,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669537,"byte_end":13669544,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669549,"byte_end":13669582,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669587,"byte_end":13669590,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669595,"byte_end":13669625,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669630,"byte_end":13669655,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669660,"byte_end":13669724,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669729,"byte_end":13669736,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669741,"byte_end":13669759,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669764,"byte_end":13669771,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670950,"byte_end":13670955,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669912,"byte_end":13669963,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669968,"byte_end":13669971,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669976,"byte_end":13670066,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670071,"byte_end":13670165,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670170,"byte_end":13670264,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670269,"byte_end":13670321,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670326,"byte_end":13670329,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670334,"byte_end":13670427,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670432,"byte_end":13670435,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670440,"byte_end":13670454,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670459,"byte_end":13670462,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670467,"byte_end":13670474,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670479,"byte_end":13670528,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670533,"byte_end":13670577,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670582,"byte_end":13670585,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670590,"byte_end":13670619,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670624,"byte_end":13670657,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670662,"byte_end":13670667,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670672,"byte_end":13670711,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670716,"byte_end":13670770,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670775,"byte_end":13670780,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670785,"byte_end":13670803,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670808,"byte_end":13670813,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670818,"byte_end":13670857,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670862,"byte_end":13670916,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670921,"byte_end":13670926,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670931,"byte_end":13670938,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672282,"byte_end":13672293,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671079,"byte_end":13671170,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671175,"byte_end":13671178,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671183,"byte_end":13671274,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671279,"byte_end":13671375,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671380,"byte_end":13671474,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671479,"byte_end":13671498,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671503,"byte_end":13671506,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671511,"byte_end":13671605,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671610,"byte_end":13671652,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671657,"byte_end":13671660,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671665,"byte_end":13671679,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671684,"byte_end":13671687,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671692,"byte_end":13671699,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671704,"byte_end":13671753,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671758,"byte_end":13671802,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671807,"byte_end":13671827,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671832,"byte_end":13671860,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671865,"byte_end":13671868,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671873,"byte_end":13671902,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671907,"byte_end":13671940,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671945,"byte_end":13671950,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671955,"byte_end":13671994,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671999,"byte_end":13672053,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672058,"byte_end":13672063,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672068,"byte_end":13672135,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672140,"byte_end":13672145,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672150,"byte_end":13672189,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672194,"byte_end":13672248,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672253,"byte_end":13672258,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672263,"byte_end":13672270,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673439,"byte_end":13673448,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672898,"byte_end":13672953,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672958,"byte_end":13672961,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672966,"byte_end":13673041,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673046,"byte_end":13673096,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673101,"byte_end":13673104,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673109,"byte_end":13673193,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673198,"byte_end":13673201,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673206,"byte_end":13673220,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673225,"byte_end":13673228,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673233,"byte_end":13673240,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673245,"byte_end":13673278,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673283,"byte_end":13673286,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673291,"byte_end":13673321,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673326,"byte_end":13673356,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673361,"byte_end":13673415,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673420,"byte_end":13673427,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676747,"byte_end":13676758,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673858,"byte_end":13673945,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673946,"byte_end":13673949,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673950,"byte_end":13674045,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674046,"byte_end":13674135,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674136,"byte_end":13674139,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674140,"byte_end":13674233,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674234,"byte_end":13674271,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674272,"byte_end":13674275,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674276,"byte_end":13674372,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674373,"byte_end":13674376,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674377,"byte_end":13674389,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674390,"byte_end":13674393,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674394,"byte_end":13674484,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674485,"byte_end":13674552,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674553,"byte_end":13674556,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674557,"byte_end":13674571,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674572,"byte_end":13674575,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674576,"byte_end":13674583,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674584,"byte_end":13674633,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674634,"byte_end":13674679,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674680,"byte_end":13674683,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674684,"byte_end":13674711,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674712,"byte_end":13674715,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674716,"byte_end":13674728,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674729,"byte_end":13674784,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674785,"byte_end":13674831,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674832,"byte_end":13674835,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674836,"byte_end":13674910,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674911,"byte_end":13674961,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674962,"byte_end":13674965,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674966,"byte_end":13674995,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674996,"byte_end":13675052,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675053,"byte_end":13675064,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675065,"byte_end":13675068,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675069,"byte_end":13675150,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675151,"byte_end":13675156,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675157,"byte_end":13675164,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675165,"byte_end":13675168,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675169,"byte_end":13675263,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675264,"byte_end":13675267,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675268,"byte_end":13675362,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675363,"byte_end":13675448,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675449,"byte_end":13675452,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675453,"byte_end":13675552,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675553,"byte_end":13675651,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675652,"byte_end":13675672,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675673,"byte_end":13675676,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675677,"byte_end":13675684,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675685,"byte_end":13675734,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675735,"byte_end":13675766,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675767,"byte_end":13675812,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675813,"byte_end":13675816,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675817,"byte_end":13675838,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675839,"byte_end":13675869,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675870,"byte_end":13675875,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675876,"byte_end":13675879,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675880,"byte_end":13675900,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675901,"byte_end":13675931,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675932,"byte_end":13675962,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675963,"byte_end":13675968,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675969,"byte_end":13675972,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675973,"byte_end":13676004,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676005,"byte_end":13676033,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676034,"byte_end":13676054,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676055,"byte_end":13676091,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676092,"byte_end":13676169,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676170,"byte_end":13676173,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676174,"byte_end":13676225,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676226,"byte_end":13676266,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676267,"byte_end":13676341,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676342,"byte_end":13676345,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676346,"byte_end":13676434,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676435,"byte_end":13676485,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676486,"byte_end":13676538,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676539,"byte_end":13676567,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676568,"byte_end":13676571,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676572,"byte_end":13676604,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676605,"byte_end":13676622,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676623,"byte_end":13676636,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676637,"byte_end":13676646,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676647,"byte_end":13676652,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676653,"byte_end":13676660,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676661,"byte_end":13676664,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676665,"byte_end":13676694,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676695,"byte_end":13676722,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676723,"byte_end":13676732,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":892},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13732750,"byte_end":13732753,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13732704,"byte_end":13732732,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13732733,"byte_end":13732742,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13732878,"byte_end":13732887,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13732809,"byte_end":13732860,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13732861,"byte_end":13732870,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":896},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13732997,"byte_end":13733014,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13732948,"byte_end":13732989,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587487,"byte_end":13587507,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588934,"byte_end":13588942,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592716,"byte_end":13592717,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595936,"byte_end":13595942,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596007,"byte_end":13596013,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596029,"byte_end":13596035,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596368,"byte_end":13596374,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617337,"byte_end":13617343,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617690,"byte_end":13617696,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617984,"byte_end":13617990,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618337,"byte_end":13618343,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618455,"byte_end":13618461,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618856,"byte_end":13618862,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618965,"byte_end":13618971,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619091,"byte_end":13619097,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619446,"byte_end":13619452,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620665,"byte_end":13620670,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621177,"byte_end":13621182,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622832,"byte_end":13622837,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624507,"byte_end":13624512,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624702,"byte_end":13624707,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624985,"byte_end":13624990,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625131,"byte_end":13625136,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625329,"byte_end":13625334,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625500,"byte_end":13625505,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625595,"byte_end":13625600,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626073,"byte_end":13626078,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626188,"byte_end":13626193,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626315,"byte_end":13626320,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626426,"byte_end":13626431,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626932,"byte_end":13626938,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627112,"byte_end":13627118,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627173,"byte_end":13627179,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627425,"byte_end":13627431,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628062,"byte_end":13628068,"line_start":1293,"line_end":1293,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635025,"byte_end":13635031,"line_start":1517,"line_end":1517,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635594,"byte_end":13635600,"line_start":1539,"line_end":1539,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635727,"byte_end":13635733,"line_start":1545,"line_end":1545,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635807,"byte_end":13635813,"line_start":1547,"line_end":1547,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635978,"byte_end":13635984,"line_start":1553,"line_end":1553,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636132,"byte_end":13636138,"line_start":1559,"line_end":1559,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636441,"byte_end":13636447,"line_start":1570,"line_end":1570,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636638,"byte_end":13636644,"line_start":1576,"line_end":1576,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13637881,"byte_end":13637890,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13637915,"byte_end":13637924,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13637946,"byte_end":13637955,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638069,"byte_end":13638078,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638320,"byte_end":13638329,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638527,"byte_end":13638536,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638664,"byte_end":13638673,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638847,"byte_end":13638856,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638967,"byte_end":13638978,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639438,"byte_end":13639449,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639596,"byte_end":13639607,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13650350,"byte_end":13650358,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13650482,"byte_end":13650490,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13654350,"byte_end":13654355,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13656159,"byte_end":13656170,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660050,"byte_end":13660055,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673573,"byte_end":13673578,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673748,"byte_end":13673753,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677037,"byte_end":13677049,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13680122,"byte_end":13680125,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13680135,"byte_end":13680138,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13681087,"byte_end":13681090,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13684364,"byte_end":13684367,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13684766,"byte_end":13684769,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13685196,"byte_end":13685205,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13685215,"byte_end":13685224,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13685906,"byte_end":13685912,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13691036,"byte_end":13691041,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13699766,"byte_end":13699771,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13705836,"byte_end":13705841,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13705977,"byte_end":13705982,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13706495,"byte_end":13706499,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13709082,"byte_end":13709086,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13709618,"byte_end":13709622,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13719443,"byte_end":13719448,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13719485,"byte_end":13719490,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13719506,"byte_end":13719511,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13725431,"byte_end":13725436,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13587487,"byte_end":13587507,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588934,"byte_end":13588942,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":46170},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592716,"byte_end":13592717,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":130}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13595936,"byte_end":13595942,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596007,"byte_end":13596013,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596029,"byte_end":13596035,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596368,"byte_end":13596374,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617337,"byte_end":13617343,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617690,"byte_end":13617696,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9612}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617984,"byte_end":13617990,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618337,"byte_end":13618343,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618455,"byte_end":13618461,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618856,"byte_end":13618862,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618965,"byte_end":13618971,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619091,"byte_end":13619097,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619446,"byte_end":13619452,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620665,"byte_end":13620670,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":249},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621177,"byte_end":13621182,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622832,"byte_end":13622837,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624507,"byte_end":13624512,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624702,"byte_end":13624707,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624985,"byte_end":13624990,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625131,"byte_end":13625136,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625329,"byte_end":13625334,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625500,"byte_end":13625505,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625595,"byte_end":13625600,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626073,"byte_end":13626078,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626188,"byte_end":13626193,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626315,"byte_end":13626320,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626426,"byte_end":13626431,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2924}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626932,"byte_end":13626938,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627112,"byte_end":13627118,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627173,"byte_end":13627179,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627425,"byte_end":13627431,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628062,"byte_end":13628068,"line_start":1293,"line_end":1293,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635025,"byte_end":13635031,"line_start":1517,"line_end":1517,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635594,"byte_end":13635600,"line_start":1539,"line_end":1539,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635727,"byte_end":13635733,"line_start":1545,"line_end":1545,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635807,"byte_end":13635813,"line_start":1547,"line_end":1547,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635978,"byte_end":13635984,"line_start":1553,"line_end":1553,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636132,"byte_end":13636138,"line_start":1559,"line_end":1559,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636441,"byte_end":13636447,"line_start":1570,"line_end":1570,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9612}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636638,"byte_end":13636644,"line_start":1576,"line_end":1576,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13637881,"byte_end":13637890,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13637915,"byte_end":13637924,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13637946,"byte_end":13637955,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638069,"byte_end":13638078,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638320,"byte_end":13638329,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638527,"byte_end":13638536,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638664,"byte_end":13638673,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638847,"byte_end":13638856,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13638967,"byte_end":13638978,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639438,"byte_end":13639449,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639596,"byte_end":13639607,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13650350,"byte_end":13650358,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13650482,"byte_end":13650490,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13654350,"byte_end":13654355,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13656159,"byte_end":13656170,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660050,"byte_end":13660055,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673573,"byte_end":13673578,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673748,"byte_end":13673753,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677037,"byte_end":13677049,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13680122,"byte_end":13680125,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13680135,"byte_end":13680138,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13681087,"byte_end":13681090,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13684364,"byte_end":13684367,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13684766,"byte_end":13684769,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13685196,"byte_end":13685205,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13685215,"byte_end":13685224,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13685906,"byte_end":13685912,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13691036,"byte_end":13691041,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13699766,"byte_end":13699771,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":622},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13705836,"byte_end":13705841,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13705977,"byte_end":13705982,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13706495,"byte_end":13706499,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13709082,"byte_end":13709086,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":850},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13709618,"byte_end":13709622,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13719443,"byte_end":13719448,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13719485,"byte_end":13719490,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13719506,"byte_end":13719511,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13725431,"byte_end":13725436,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3266}}]}