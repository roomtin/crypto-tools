{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2","program":"/home/banana/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cipher","--edition=2021","/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","-C","metadata=cd253831efd7d4f0","-C","extra-filename=-cd253831efd7d4f0","--out-dir","/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps","-L","dependency=/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps","--extern","crypto_common=/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps/libcrypto_common-357954d5791759e7.rmeta","--extern","inout=/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps/libinout-cc2d04cf5a8f9f17.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/banana/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/banana/cryptography-cs482/toolset/aesnt/target/rls/debug/deps/libcipher-cd253831efd7d4f0.rmeta"},"prelude":{"crate_id":{"name":"cipher","disambiguator":[14627781706206125646,0]},"crate_root":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src","external_crates":[{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[4285763367621004875,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12948490784112333173,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1308603873087987556,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","num":4,"id":{"name":"crypto_common","disambiguator":[5735549658486476740,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","num":5,"id":{"name":"generic_array","disambiguator":[2035457867256877231,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","num":6,"id":{"name":"typenum","disambiguator":[12906701489029885183,0]}},{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","num":7,"id":{"name":"inout","disambiguator":[979209187767671901,0]}}],"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":0,"byte_end":2087,"line_start":1,"line_end":70,"column_start":1,"column_end":89}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":671,"byte_end":684,"line_start":17,"line_end":17,"column_start":9,"column_end":22},"alias_span":null,"name":"crypto_common","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":0},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":694,"byte_end":699,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"alias_span":null,"name":"inout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":719},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3012,"byte_end":3020,"line_start":23,"line_end":23,"column_start":62,"column_end":70},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":4,"index":31},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3029,"byte_end":3042,"line_start":23,"line_end":23,"column_start":79,"column_end":92},"alias_span":null,"name":"BlockSizeUser","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1280,"byte_end":1281,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"BlockSizeUser, BlockEncryptMut, BlockDecryptMut","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1291,"byte_end":1292,"line_start":48,"line_end":48,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"OverflowError, StreamCipherError","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1302,"byte_end":1303,"line_start":48,"line_end":48,"column_start":46,"column_end":47},"alias_span":null,"name":"*","value":"SeekNum, StreamCipherSeek, StreamCipher","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1318,"byte_end":1319,"line_start":48,"line_end":48,"column_start":62,"column_end":63},"alias_span":null,"name":"*","value":"StreamCipherSeekCore, StreamCipherCore","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1337,"byte_end":1338,"line_start":48,"line_end":48,"column_start":81,"column_end":82},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":0},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1370,"byte_end":1383,"line_start":50,"line_end":50,"column_start":5,"column_end":18},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":0},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1389,"byte_end":1396,"line_start":51,"line_end":51,"column_start":5,"column_end":12},"alias_span":null,"name":"typenum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":2827},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1405,"byte_end":1411,"line_start":51,"line_end":51,"column_start":21,"column_end":27},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":53},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1418,"byte_end":1431,"line_start":52,"line_end":52,"column_start":5,"column_end":18},"alias_span":null,"name":"AlgorithmName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":23},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1433,"byte_end":1438,"line_start":52,"line_end":52,"column_start":20,"column_end":25},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":63},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1440,"byte_end":1451,"line_start":52,"line_end":52,"column_start":27,"column_end":38},"alias_span":null,"name":"InnerIvInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":81},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1453,"byte_end":1466,"line_start":52,"line_end":52,"column_start":40,"column_end":53},"alias_span":null,"name":"InvalidLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":82},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1453,"byte_end":1466,"line_start":52,"line_end":52,"column_start":40,"column_end":53},"alias_span":null,"name":"InvalidLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":29},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1468,"byte_end":1470,"line_start":52,"line_end":52,"column_start":55,"column_end":57},"alias_span":null,"name":"Iv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":46},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1472,"byte_end":1482,"line_start":52,"line_end":52,"column_start":59,"column_end":69},"alias_span":null,"name":"IvSizeUser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":27},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1484,"byte_end":1487,"line_start":52,"line_end":52,"column_start":71,"column_end":74},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":55},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1489,"byte_end":1496,"line_start":52,"line_end":52,"column_start":76,"column_end":83},"alias_span":null,"name":"KeyInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":58},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1498,"byte_end":1507,"line_start":52,"line_end":52,"column_start":85,"column_end":94},"alias_span":null,"name":"KeyIvInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":43},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1513,"byte_end":1524,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"alias_span":null,"name":"KeySizeUser","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":0,"byte_end":2087,"line_start":1,"line_end":70,"column_start":1,"column_end":89},"name":"","qualname":"::","value":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":143},{"krate":0,"index":153},{"krate":0,"index":216},{"krate":0,"index":339},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494}],"decl_id":null,"docs":" This crate defines a set of traits which describe the functionality of\n [block ciphers][1], [block modes][2], and [stream ciphers][3].","sig":null,"attributes":[{"value":"/ This crate defines a set of traits which describe the functionality of","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":0,"byte_end":74,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/ [block ciphers][1], [block modes][2], and [stream ciphers][3].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":75,"byte_end":141,"line_start":2,"line_end":2,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":142,"byte_end":145,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Block_cipher","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":146,"byte_end":197,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/ [2]: https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":198,"byte_end":267,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/ [3]: https://en.wikipedia.org/wiki/Stream_cipher","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":268,"byte_end":320,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"no_std","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":322,"byte_end":332,"line_start":8,"line_end":8,"column_start":1,"column_end":11}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":621,"byte_end":661,"line_start":15,"line_end":15,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3092,"byte_end":3103,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"BlockCipher","qualname":"::block::BlockCipher","value":"BlockCipher: BlockSizeUser","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for block ciphers.\n","sig":null,"attributes":[{"value":"/ Marker trait for block ciphers.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3046,"byte_end":3081,"line_start":25,"line_end":25,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3207,"byte_end":3219,"line_start":29,"line_end":29,"column_start":11,"column_end":23},"name":"BlockBackend","qualname":"::block::BlockBackend","value":"BlockBackend: ParBlocksSizeUser","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Trait implemented by block cipher encryption and decryption backends.\n","sig":null,"attributes":[{"value":"/ Trait implemented by block cipher encryption and decryption backends.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3123,"byte_end":3196,"line_start":28,"line_end":28,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3284,"byte_end":3294,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"proc_block","qualname":"::block::BlockBackend::proc_block","value":"pub fn proc_block(&mut Self, InOut<, , Block<Self>>)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Process single inout block.\n","sig":null,"attributes":[{"value":"/ Process single inout block.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3245,"byte_end":3276,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3414,"byte_end":3429,"line_start":35,"line_end":35,"column_start":8,"column_end":23},"name":"proc_par_blocks","qualname":"::block::BlockBackend::proc_par_blocks","value":"pub fn proc_par_blocks(&mut Self, InOut<, , ParBlocks<Self>>)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Process inout blocks in parallel.\n","sig":null,"attributes":[{"value":"/ Process inout blocks in parallel.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3347,"byte_end":3384,"line_start":33,"line_end":33,"column_start":5,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3389,"byte_end":3406,"line_start":34,"line_end":34,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3739,"byte_end":3755,"line_start":44,"line_end":44,"column_start":8,"column_end":24},"name":"proc_tail_blocks","qualname":"::block::BlockBackend::proc_tail_blocks","value":"pub fn proc_tail_blocks(&mut Self, InOutBuf<, , Block<Self>>)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Process buffer of inout blocks. Length of the buffer MUST be smaller\n than `Self::ParBlocksSize`.\n","sig":null,"attributes":[{"value":"/ Process buffer of inout blocks. Length of the buffer MUST be smaller","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3601,"byte_end":3673,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ than `Self::ParBlocksSize`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3678,"byte_end":3709,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3714,"byte_end":3731,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4019,"byte_end":4037,"line_start":53,"line_end":53,"column_start":8,"column_end":26},"name":"proc_block_inplace","qualname":"::block::BlockBackend::proc_block_inplace","value":"pub fn proc_block_inplace(&mut Self, &mut Block<Self>)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Process single block in-place.\n","sig":null,"attributes":[{"value":"/ Process single block in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3955,"byte_end":3989,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"inline(always)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3994,"byte_end":4011,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4196,"byte_end":4219,"line_start":59,"line_end":59,"column_start":8,"column_end":31},"name":"proc_par_blocks_inplace","qualname":"::block::BlockBackend::proc_par_blocks_inplace","value":"pub fn proc_par_blocks_inplace(&mut Self, &mut ParBlocks<Self>)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Process blocks in parallel in-place.\n","sig":null,"attributes":[{"value":"/ Process blocks in parallel in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4126,"byte_end":4166,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4171,"byte_end":4188,"line_start":58,"line_end":58,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4460,"byte_end":4484,"line_start":66,"line_end":66,"column_start":8,"column_end":32},"name":"proc_tail_blocks_inplace","qualname":"::block::BlockBackend::proc_tail_blocks_inplace","value":"pub fn proc_tail_blocks_inplace(&mut Self, &mut [Block<Self>])","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Process buffer of blocks in-place. Length of the buffer MUST be smaller\n than `Self::ParBlocksSize`.\n","sig":null,"attributes":[{"value":"/ Process buffer of blocks in-place. Length of the buffer MUST be smaller","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4319,"byte_end":4394,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ than `Self::ParBlocksSize`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4399,"byte_end":4430,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4435,"byte_end":4452,"line_start":65,"line_end":65,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4683,"byte_end":4695,"line_start":74,"line_end":74,"column_start":11,"column_end":23},"name":"BlockClosure","qualname":"::block::BlockClosure","value":"BlockClosure: BlockSizeUser","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" Trait for [`BlockBackend`] users.","sig":null,"attributes":[{"value":"/ Trait for [`BlockBackend`] users.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4581,"byte_end":4618,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4619,"byte_end":4622,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This trait is used to define rank-2 closures.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4623,"byte_end":4672,"line_start":73,"line_end":73,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4784,"byte_end":4788,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"call","qualname":"::block::BlockClosure::call","value":"pub fn call<B: BlockBackend<BlockSize = Self::BlockSize>>(Self, &mut B)","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Execute closure with the provided block cipher backend.\n","sig":null,"attributes":[{"value":"/ Execute closure with the provided block cipher backend.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4717,"byte_end":4776,"line_start":75,"line_end":75,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4922,"byte_end":4934,"line_start":80,"line_end":80,"column_start":11,"column_end":23},"name":"BlockEncrypt","qualname":"::block::BlockEncrypt","value":"BlockEncrypt: BlockSizeUser + Sized","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"decl_id":null,"docs":" Encrypt-only functionality for block ciphers.\n","sig":null,"attributes":[{"value":"/ Encrypt-only functionality for block ciphers.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4862,"byte_end":4911,"line_start":79,"line_end":79,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5034,"byte_end":5054,"line_start":82,"line_end":82,"column_start":8,"column_end":28},"name":"encrypt_with_backend","qualname":"::block::BlockEncrypt::encrypt_with_backend","value":"pub fn encrypt_with_backend<impl BlockClosure<BlockSize = Self::BlockSize>: BlockClosure<BlockSize\n= Self::BlockSize>>(&Self, impl BlockClosure<BlockSize = Self::BlockSize>)","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Encrypt data using backend provided to the rank-2 closure.\n","sig":null,"attributes":[{"value":"/ Encrypt data using backend provided to the rank-2 closure.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4964,"byte_end":5026,"line_start":81,"line_end":81,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5174,"byte_end":5193,"line_start":86,"line_end":86,"column_start":8,"column_end":27},"name":"encrypt_block_inout","qualname":"::block::BlockEncrypt::encrypt_block_inout","value":"pub fn encrypt_block_inout(&Self, InOut<, , Block<Self>>)","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Encrypt single `inout` block.\n","sig":null,"attributes":[{"value":"/ Encrypt single `inout` block.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5119,"byte_end":5152,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5157,"byte_end":5166,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5353,"byte_end":5373,"line_start":92,"line_end":92,"column_start":8,"column_end":28},"name":"encrypt_blocks_inout","qualname":"::block::BlockEncrypt::encrypt_blocks_inout","value":"pub fn encrypt_blocks_inout(&Self, InOutBuf<, , Block<Self>>)","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Encrypt `inout` blocks.\n","sig":null,"attributes":[{"value":"/ Encrypt `inout` blocks.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5304,"byte_end":5331,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5336,"byte_end":5345,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5546,"byte_end":5559,"line_start":98,"line_end":98,"column_start":8,"column_end":21},"name":"encrypt_block","qualname":"::block::BlockEncrypt::encrypt_block","value":"pub fn encrypt_block(&Self, &mut Block<Self>)","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Encrypt single block in-place.\n","sig":null,"attributes":[{"value":"/ Encrypt single block in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5490,"byte_end":5524,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5529,"byte_end":5538,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5771,"byte_end":5788,"line_start":105,"line_end":105,"column_start":8,"column_end":25},"name":"encrypt_block_b2b","qualname":"::block::BlockEncrypt::encrypt_block_b2b","value":"pub fn encrypt_block_b2b(&Self, &Block<Self>, &mut Block<Self>)","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Encrypt `in_block` and write result to `out_block`.\n","sig":null,"attributes":[{"value":"/ Encrypt `in_block` and write result to `out_block`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5694,"byte_end":5749,"line_start":103,"line_end":103,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5754,"byte_end":5763,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":6017,"byte_end":6031,"line_start":112,"line_end":112,"column_start":8,"column_end":22},"name":"encrypt_blocks","qualname":"::block::BlockEncrypt::encrypt_blocks","value":"pub fn encrypt_blocks(&Self, &mut [Block<Self>])","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Encrypt blocks in-place.\n","sig":null,"attributes":[{"value":"/ Encrypt blocks in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":5967,"byte_end":5995,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":6000,"byte_end":6009,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":6346,"byte_end":6364,"line_start":122,"line_end":122,"column_start":8,"column_end":26},"name":"encrypt_blocks_b2b","qualname":"::block::BlockEncrypt::encrypt_blocks_b2b","value":"pub fn encrypt_blocks_b2b(&Self, &[Block<Self>], &mut [Block<Self>])\n-> Result<(), NotEqualError>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Encrypt blocks buffer-to-buffer.","sig":null,"attributes":[{"value":"/ Encrypt blocks buffer-to-buffer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":6173,"byte_end":6209,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":6214,"byte_end":6217,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Returns [`NotEqualError`] if provided `in_blocks` and `out_blocks`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":6222,"byte_end":6292,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/ have different lengths.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":6297,"byte_end":6324,"line_start":120,"line_end":120,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":6329,"byte_end":6338,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9141,"byte_end":9153,"line_start":195,"line_end":195,"column_start":11,"column_end":23},"name":"BlockDecrypt","qualname":"::block::BlockDecrypt","value":"BlockDecrypt: BlockSizeUser","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" Decrypt-only functionality for block ciphers.\n","sig":null,"attributes":[{"value":"/ Decrypt-only functionality for block ciphers.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9081,"byte_end":9130,"line_start":194,"line_end":194,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9245,"byte_end":9265,"line_start":197,"line_end":197,"column_start":8,"column_end":28},"name":"decrypt_with_backend","qualname":"::block::BlockDecrypt::decrypt_with_backend","value":"pub fn decrypt_with_backend<impl BlockClosure<BlockSize = Self::BlockSize>: BlockClosure<BlockSize\n= Self::BlockSize>>(&Self, impl BlockClosure<BlockSize = Self::BlockSize>)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Decrypt data using backend provided to the rank-2 closure.\n","sig":null,"attributes":[{"value":"/ Decrypt data using backend provided to the rank-2 closure.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9175,"byte_end":9237,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9385,"byte_end":9404,"line_start":201,"line_end":201,"column_start":8,"column_end":27},"name":"decrypt_block_inout","qualname":"::block::BlockDecrypt::decrypt_block_inout","value":"pub fn decrypt_block_inout(&Self, InOut<, , Block<Self>>)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Decrypt single `inout` block.\n","sig":null,"attributes":[{"value":"/ Decrypt single `inout` block.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9330,"byte_end":9363,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9368,"byte_end":9377,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9564,"byte_end":9584,"line_start":207,"line_end":207,"column_start":8,"column_end":28},"name":"decrypt_blocks_inout","qualname":"::block::BlockDecrypt::decrypt_blocks_inout","value":"pub fn decrypt_blocks_inout(&Self, InOutBuf<, , Block<Self>>)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Decrypt `inout` blocks.\n","sig":null,"attributes":[{"value":"/ Decrypt `inout` blocks.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9515,"byte_end":9542,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9547,"byte_end":9556,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9757,"byte_end":9770,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"decrypt_block","qualname":"::block::BlockDecrypt::decrypt_block","value":"pub fn decrypt_block(&Self, &mut Block<Self>)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Decrypt single block in-place.\n","sig":null,"attributes":[{"value":"/ Decrypt single block in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9701,"byte_end":9735,"line_start":211,"line_end":211,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9740,"byte_end":9749,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9982,"byte_end":9999,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"decrypt_block_b2b","qualname":"::block::BlockDecrypt::decrypt_block_b2b","value":"pub fn decrypt_block_b2b(&Self, &Block<Self>, &mut Block<Self>)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Decrypt `in_block` and write result to `out_block`.\n","sig":null,"attributes":[{"value":"/ Decrypt `in_block` and write result to `out_block`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9905,"byte_end":9960,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9965,"byte_end":9974,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":10228,"byte_end":10242,"line_start":227,"line_end":227,"column_start":8,"column_end":22},"name":"decrypt_blocks","qualname":"::block::BlockDecrypt::decrypt_blocks","value":"pub fn decrypt_blocks(&Self, &mut [Block<Self>])","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Decrypt blocks in-place.\n","sig":null,"attributes":[{"value":"/ Decrypt blocks in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":10178,"byte_end":10206,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":10211,"byte_end":10220,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":10557,"byte_end":10575,"line_start":237,"line_end":237,"column_start":8,"column_end":26},"name":"decrypt_blocks_b2b","qualname":"::block::BlockDecrypt::decrypt_blocks_b2b","value":"pub fn decrypt_blocks_b2b(&Self, &[Block<Self>], &mut [Block<Self>])\n-> Result<(), NotEqualError>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Decrypt blocks buffer-to-buffer.","sig":null,"attributes":[{"value":"/ Decrypt blocks buffer-to-buffer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":10384,"byte_end":10420,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":10425,"byte_end":10428,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns [`NotEqualError`] if provided `in_blocks` and `out_blocks`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":10433,"byte_end":10503,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ have different lengths.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":10508,"byte_end":10535,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":10540,"byte_end":10549,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":72},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13853,"byte_end":13868,"line_start":325,"line_end":325,"column_start":11,"column_end":26},"name":"BlockEncryptMut","qualname":"::block::BlockEncryptMut","value":"BlockEncryptMut: BlockSizeUser + Sized","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":" Encrypt-only functionality for block ciphers and modes with mutable access to `self`.","sig":null,"attributes":[{"value":"/ Encrypt-only functionality for block ciphers and modes with mutable access to `self`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13557,"byte_end":13646,"line_start":320,"line_end":320,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13647,"byte_end":13650,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ The main use case for this trait is blocks modes, but it also can be used","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13651,"byte_end":13728,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/ for hardware cryptographic engines which require `&mut self` access to an","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13729,"byte_end":13806,"line_start":323,"line_end":323,"column_start":1,"column_end":78}},{"value":"/ underlying hardware peripheral.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13807,"byte_end":13842,"line_start":324,"line_end":324,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13968,"byte_end":13992,"line_start":327,"line_end":327,"column_start":8,"column_end":32},"name":"encrypt_with_backend_mut","qualname":"::block::BlockEncryptMut::encrypt_with_backend_mut","value":"pub fn encrypt_with_backend_mut<impl BlockClosure<BlockSize = Self::BlockSize>: BlockClosure<BlockSize\n= Self::BlockSize>>(&mut Self, impl BlockClosure<BlockSize = Self::BlockSize>)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Encrypt data using backend provided to the rank-2 closure.\n","sig":null,"attributes":[{"value":"/ Encrypt data using backend provided to the rank-2 closure.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13898,"byte_end":13960,"line_start":326,"line_end":326,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14116,"byte_end":14139,"line_start":331,"line_end":331,"column_start":8,"column_end":31},"name":"encrypt_block_inout_mut","qualname":"::block::BlockEncryptMut::encrypt_block_inout_mut","value":"pub fn encrypt_block_inout_mut(&mut Self, InOut<, , Block<Self>>)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Encrypt single `inout` block.\n","sig":null,"attributes":[{"value":"/ Encrypt single `inout` block.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14061,"byte_end":14094,"line_start":329,"line_end":329,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14099,"byte_end":14108,"line_start":330,"line_end":330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14307,"byte_end":14331,"line_start":337,"line_end":337,"column_start":8,"column_end":32},"name":"encrypt_blocks_inout_mut","qualname":"::block::BlockEncryptMut::encrypt_blocks_inout_mut","value":"pub fn encrypt_blocks_inout_mut(&mut Self, InOutBuf<, , Block<Self>>)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Encrypt `inout` blocks.\n","sig":null,"attributes":[{"value":"/ Encrypt `inout` blocks.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14258,"byte_end":14285,"line_start":335,"line_end":335,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14290,"byte_end":14299,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14512,"byte_end":14529,"line_start":343,"line_end":343,"column_start":8,"column_end":25},"name":"encrypt_block_mut","qualname":"::block::BlockEncryptMut::encrypt_block_mut","value":"pub fn encrypt_block_mut(&mut Self, &mut Block<Self>)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Encrypt single block in-place.\n","sig":null,"attributes":[{"value":"/ Encrypt single block in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14456,"byte_end":14490,"line_start":341,"line_end":341,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14495,"byte_end":14504,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14749,"byte_end":14770,"line_start":350,"line_end":350,"column_start":8,"column_end":29},"name":"encrypt_block_b2b_mut","qualname":"::block::BlockEncryptMut::encrypt_block_b2b_mut","value":"pub fn encrypt_block_b2b_mut(&mut Self, &Block<Self>, &mut Block<Self>)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Encrypt `in_block` and write result to `out_block`.\n","sig":null,"attributes":[{"value":"/ Encrypt `in_block` and write result to `out_block`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14672,"byte_end":14727,"line_start":348,"line_end":348,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14732,"byte_end":14741,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":15007,"byte_end":15025,"line_start":357,"line_end":357,"column_start":8,"column_end":26},"name":"encrypt_blocks_mut","qualname":"::block::BlockEncryptMut::encrypt_blocks_mut","value":"pub fn encrypt_blocks_mut(&mut Self, &mut [Block<Self>])","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Encrypt blocks in-place.\n","sig":null,"attributes":[{"value":"/ Encrypt blocks in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14957,"byte_end":14985,"line_start":355,"line_end":355,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":14990,"byte_end":14999,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":15348,"byte_end":15370,"line_start":367,"line_end":367,"column_start":8,"column_end":30},"name":"encrypt_blocks_b2b_mut","qualname":"::block::BlockEncryptMut::encrypt_blocks_b2b_mut","value":"pub fn encrypt_blocks_b2b_mut(&mut Self, &[Block<Self>], &mut [Block<Self>])\n-> Result<(), NotEqualError>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Encrypt blocks buffer-to-buffer.","sig":null,"attributes":[{"value":"/ Encrypt blocks buffer-to-buffer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":15175,"byte_end":15211,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":15216,"byte_end":15219,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Returns [`NotEqualError`] if provided `in_blocks` and `out_blocks`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":15224,"byte_end":15294,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ have different lengths.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":15299,"byte_end":15326,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":15331,"byte_end":15340,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18417,"byte_end":18432,"line_start":444,"line_end":444,"column_start":11,"column_end":26},"name":"BlockDecryptMut","qualname":"::block::BlockDecryptMut","value":"BlockDecryptMut: BlockSizeUser + Sized","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" Decrypt-only functionality for block ciphers and modes with mutable access to `self`.","sig":null,"attributes":[{"value":"/ Decrypt-only functionality for block ciphers and modes with mutable access to `self`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18121,"byte_end":18210,"line_start":439,"line_end":439,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18211,"byte_end":18214,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ The main use case for this trait is blocks modes, but it also can be used","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18215,"byte_end":18292,"line_start":441,"line_end":441,"column_start":1,"column_end":78}},{"value":"/ for hardware cryptographic engines which require `&mut self` access to an","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18293,"byte_end":18370,"line_start":442,"line_end":442,"column_start":1,"column_end":78}},{"value":"/ underlying hardware peripheral.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18371,"byte_end":18406,"line_start":443,"line_end":443,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18532,"byte_end":18556,"line_start":446,"line_end":446,"column_start":8,"column_end":32},"name":"decrypt_with_backend_mut","qualname":"::block::BlockDecryptMut::decrypt_with_backend_mut","value":"pub fn decrypt_with_backend_mut<impl BlockClosure<BlockSize = Self::BlockSize>: BlockClosure<BlockSize\n= Self::BlockSize>>(&mut Self, impl BlockClosure<BlockSize = Self::BlockSize>)","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decrypt data using backend provided to the rank-2 closure.\n","sig":null,"attributes":[{"value":"/ Decrypt data using backend provided to the rank-2 closure.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18462,"byte_end":18524,"line_start":445,"line_end":445,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18680,"byte_end":18703,"line_start":450,"line_end":450,"column_start":8,"column_end":31},"name":"decrypt_block_inout_mut","qualname":"::block::BlockDecryptMut::decrypt_block_inout_mut","value":"pub fn decrypt_block_inout_mut(&mut Self, InOut<, , Block<Self>>)","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decrypt single `inout` block.\n","sig":null,"attributes":[{"value":"/ Decrypt single `inout` block.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18625,"byte_end":18658,"line_start":448,"line_end":448,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18663,"byte_end":18672,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18871,"byte_end":18895,"line_start":456,"line_end":456,"column_start":8,"column_end":32},"name":"decrypt_blocks_inout_mut","qualname":"::block::BlockDecryptMut::decrypt_blocks_inout_mut","value":"pub fn decrypt_blocks_inout_mut(&mut Self, InOutBuf<, , Block<Self>>)","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decrypt `inout` blocks.\n","sig":null,"attributes":[{"value":"/ Decrypt `inout` blocks.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18822,"byte_end":18849,"line_start":454,"line_end":454,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18854,"byte_end":18863,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19076,"byte_end":19093,"line_start":462,"line_end":462,"column_start":8,"column_end":25},"name":"decrypt_block_mut","qualname":"::block::BlockDecryptMut::decrypt_block_mut","value":"pub fn decrypt_block_mut(&mut Self, &mut Block<Self>)","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decrypt single block in-place.\n","sig":null,"attributes":[{"value":"/ Decrypt single block in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19020,"byte_end":19054,"line_start":460,"line_end":460,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19059,"byte_end":19068,"line_start":461,"line_end":461,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19313,"byte_end":19334,"line_start":469,"line_end":469,"column_start":8,"column_end":29},"name":"decrypt_block_b2b_mut","qualname":"::block::BlockDecryptMut::decrypt_block_b2b_mut","value":"pub fn decrypt_block_b2b_mut(&mut Self, &Block<Self>, &mut Block<Self>)","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decrypt `in_block` and write result to `out_block`.\n","sig":null,"attributes":[{"value":"/ Decrypt `in_block` and write result to `out_block`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19236,"byte_end":19291,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19296,"byte_end":19305,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19571,"byte_end":19589,"line_start":476,"line_end":476,"column_start":8,"column_end":26},"name":"decrypt_blocks_mut","qualname":"::block::BlockDecryptMut::decrypt_blocks_mut","value":"pub fn decrypt_blocks_mut(&mut Self, &mut [Block<Self>])","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decrypt blocks in-place.\n","sig":null,"attributes":[{"value":"/ Decrypt blocks in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19521,"byte_end":19549,"line_start":474,"line_end":474,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19554,"byte_end":19563,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19912,"byte_end":19934,"line_start":486,"line_end":486,"column_start":8,"column_end":30},"name":"decrypt_blocks_b2b_mut","qualname":"::block::BlockDecryptMut::decrypt_blocks_b2b_mut","value":"pub fn decrypt_blocks_b2b_mut(&mut Self, &[Block<Self>], &mut [Block<Self>])\n-> Result<(), NotEqualError>","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decrypt blocks buffer-to-buffer.","sig":null,"attributes":[{"value":"/ Decrypt blocks buffer-to-buffer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19739,"byte_end":19775,"line_start":481,"line_end":481,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19780,"byte_end":19783,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Returns [`NotEqualError`] if provided `in_blocks` and `out_blocks`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19788,"byte_end":19858,"line_start":483,"line_end":483,"column_start":5,"column_end":75}},{"value":"/ have different lengths.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19863,"byte_end":19890,"line_start":484,"line_end":484,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":19895,"byte_end":19904,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28676,"byte_end":28693,"line_start":12,"line_end":12,"column_start":12,"column_end":29},"name":"StreamCipherError","qualname":"::errors::StreamCipherError","value":"","parent":null,"children":[],"decl_id":null,"docs":" This error is returned by the [`StreamCipher`][crate::stream::StreamCipher]\n trait methods.","sig":null,"attributes":[{"value":"/ This error is returned by the [`StreamCipher`][crate::stream::StreamCipher]","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28354,"byte_end":28433,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ trait methods.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28434,"byte_end":28452,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28453,"byte_end":28456,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Usually it's used in cases when stream cipher has reached the end","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28457,"byte_end":28526,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ of a keystream, but also can be used if lengths of provided input","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28527,"byte_end":28596,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ and output buffers are not equal.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28597,"byte_end":28634,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":29117,"byte_end":29130,"line_start":27,"line_end":27,"column_start":12,"column_end":25},"name":"OverflowError","qualname":"::errors::OverflowError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned when a cipher position can not be represented\n by the requested type.\n","sig":null,"attributes":[{"value":"/ The error type returned when a cipher position can not be represented","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28975,"byte_end":29048,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ by the requested type.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":29049,"byte_end":29075,"line_start":25,"line_end":25,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":181},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":29973,"byte_end":29990,"line_start":12,"line_end":12,"column_start":11,"column_end":28},"name":"AsyncStreamCipher","qualname":"::stream::AsyncStreamCipher","value":"AsyncStreamCipher: Sized","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":188}],"decl_id":null,"docs":" Marker trait for block-level asynchronous stream ciphers\n","sig":null,"attributes":[{"value":"/ Marker trait for block-level asynchronous stream ciphers","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":29902,"byte_end":29962,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":30046,"byte_end":30059,"line_start":14,"line_end":14,"column_start":8,"column_end":21},"name":"encrypt_inout","qualname":"::stream::AsyncStreamCipher::encrypt_inout","value":"pub fn encrypt_inout(Self, InOutBuf<, , u8>) where Self: BlockEncryptMut","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Encrypt data using `InOutBuf`.\n","sig":null,"attributes":[{"value":"/ Encrypt data using `InOutBuf`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":30004,"byte_end":30038,"line_start":13,"line_end":13,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":30566,"byte_end":30579,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"decrypt_inout","qualname":"::stream::AsyncStreamCipher::decrypt_inout","value":"pub fn decrypt_inout(Self, InOutBuf<, , u8>) where Self: BlockDecryptMut","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Decrypt data using `InOutBuf`.\n","sig":null,"attributes":[{"value":"/ Decrypt data using `InOutBuf`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":30524,"byte_end":30558,"line_start":29,"line_end":29,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31077,"byte_end":31084,"line_start":45,"line_end":45,"column_start":8,"column_end":15},"name":"encrypt","qualname":"::stream::AsyncStreamCipher::encrypt","value":"pub fn encrypt(Self, &mut [u8]) where Self: BlockEncryptMut","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Encrypt data in place.\n","sig":null,"attributes":[{"value":"/ Encrypt data in place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31043,"byte_end":31069,"line_start":44,"line_end":44,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31239,"byte_end":31246,"line_start":53,"line_end":53,"column_start":8,"column_end":15},"name":"decrypt","qualname":"::stream::AsyncStreamCipher::decrypt","value":"pub fn decrypt(Self, &mut [u8]) where Self: BlockDecryptMut","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Decrypt data in place.\n","sig":null,"attributes":[{"value":"/ Decrypt data in place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31205,"byte_end":31231,"line_start":52,"line_end":52,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31414,"byte_end":31425,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"encrypt_b2b","qualname":"::stream::AsyncStreamCipher::encrypt_b2b","value":"pub fn encrypt_b2b(Self, &[u8], &mut [u8]) -> Result<(), NotEqualError> where\nSelf: BlockEncryptMut","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Encrypt data from buffer to buffer.\n","sig":null,"attributes":[{"value":"/ Encrypt data from buffer to buffer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31367,"byte_end":31406,"line_start":60,"line_end":60,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31671,"byte_end":31682,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"decrypt_b2b","qualname":"::stream::AsyncStreamCipher::decrypt_b2b","value":"pub fn decrypt_b2b(Self, &[u8], &mut [u8]) -> Result<(), NotEqualError> where\nSelf: BlockDecryptMut","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Decrypt data from buffer to buffer.\n","sig":null,"attributes":[{"value":"/ Decrypt data from buffer to buffer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31624,"byte_end":31663,"line_start":68,"line_end":68,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":190},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31931,"byte_end":31943,"line_start":78,"line_end":78,"column_start":11,"column_end":23},"name":"StreamCipher","qualname":"::stream::StreamCipher","value":"StreamCipher","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"decl_id":null,"docs":" Synchronous stream cipher core trait.\n","sig":null,"attributes":[{"value":"/ Synchronous stream cipher core trait.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31879,"byte_end":31920,"line_start":77,"line_end":77,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32163,"byte_end":32188,"line_start":83,"line_end":83,"column_start":8,"column_end":33},"name":"try_apply_keystream_inout","qualname":"::stream::StreamCipher::try_apply_keystream_inout","value":"pub fn try_apply_keystream_inout(&mut Self, InOutBuf<, , u8>)\n-> Result<(), StreamCipherError>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Apply keystream to `inout` data.","sig":null,"attributes":[{"value":"/ Apply keystream to `inout` data.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31950,"byte_end":31986,"line_start":79,"line_end":79,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31991,"byte_end":31994,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ If end of the keystream will be achieved with the given data length,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":31999,"byte_end":32071,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ method will return [`StreamCipherError`] without modifying provided `data`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32076,"byte_end":32155,"line_start":82,"line_end":82,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32521,"byte_end":32540,"line_start":93,"line_end":93,"column_start":8,"column_end":27},"name":"try_apply_keystream","qualname":"::stream::StreamCipher::try_apply_keystream","value":"pub fn try_apply_keystream(&mut Self, &mut [u8])\n-> Result<(), StreamCipherError>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Apply keystream to data behind `buf`.","sig":null,"attributes":[{"value":"/ Apply keystream to data behind `buf`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32289,"byte_end":32330,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32335,"byte_end":32338,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If end of the keystream will be achieved with the given data length,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32343,"byte_end":32415,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ method will return [`StreamCipherError`] without modifying provided `data`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32420,"byte_end":32499,"line_start":91,"line_end":91,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32504,"byte_end":32513,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33019,"byte_end":33040,"line_start":106,"line_end":106,"column_start":8,"column_end":29},"name":"apply_keystream_inout","qualname":"::stream::StreamCipher::apply_keystream_inout","value":"pub fn apply_keystream_inout(&mut Self, InOutBuf<, , u8>)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Apply keystream to `inout` data.","sig":null,"attributes":[{"value":"/ Apply keystream to `inout` data.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32665,"byte_end":32701,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32706,"byte_end":32709,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It will XOR generated keystream with the data behind `in` pointer","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32714,"byte_end":32783,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ and will write result to `out` pointer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32788,"byte_end":32831,"line_start":100,"line_end":100,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32836,"byte_end":32839,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32844,"byte_end":32856,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/ If end of the keystream will be reached with the given data length,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32861,"byte_end":32932,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ method will panic without modifying the provided `data`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":32937,"byte_end":32997,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33002,"byte_end":33011,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33481,"byte_end":33496,"line_start":119,"line_end":119,"column_start":8,"column_end":23},"name":"apply_keystream","qualname":"::stream::StreamCipher::apply_keystream","value":"pub fn apply_keystream(&mut Self, &mut [u8])","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Apply keystream to data in-place.","sig":null,"attributes":[{"value":"/ Apply keystream to data in-place.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33146,"byte_end":33183,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33188,"byte_end":33191,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ It will XOR generated keystream with `data` and will write result","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33196,"byte_end":33265,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/ to the same buffer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33270,"byte_end":33293,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33298,"byte_end":33301,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33306,"byte_end":33318,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/ If end of the keystream will be reached with the given data length,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33323,"byte_end":33394,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ method will panic without modifying the provided `data`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33399,"byte_end":33459,"line_start":117,"line_end":117,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33464,"byte_end":33473,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33991,"byte_end":34010,"line_start":132,"line_end":132,"column_start":8,"column_end":27},"name":"apply_keystream_b2b","qualname":"::stream::StreamCipher::apply_keystream_b2b","value":"pub fn apply_keystream_b2b(&mut Self, &[u8], &mut [u8])\n-> Result<(), StreamCipherError>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Apply keystream to data buffer-to-buffer.","sig":null,"attributes":[{"value":"/ Apply keystream to data buffer-to-buffer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33585,"byte_end":33630,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33635,"byte_end":33638,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ It will XOR generated keystream with data from the `input` buffer","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33643,"byte_end":33712,"line_start":125,"line_end":125,"column_start":5,"column_end":74}},{"value":"/ and will write result to the `output` buffer.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33717,"byte_end":33766,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33771,"byte_end":33774,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Returns [`StreamCipherError`] if provided `in_blocks` and `out_blocks`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33779,"byte_end":33853,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ have different lengths or if end of the keystream will be reached with","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33858,"byte_end":33932,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ the given input data length.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33937,"byte_end":33969,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":33974,"byte_end":33983,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":198},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34501,"byte_end":34517,"line_start":148,"line_end":148,"column_start":11,"column_end":27},"name":"StreamCipherSeek","qualname":"::stream::StreamCipherSeek","value":"StreamCipherSeek","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":205}],"decl_id":null,"docs":" Trait for seekable stream ciphers.","sig":null,"attributes":[{"value":"/ Trait for seekable stream ciphers.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34276,"byte_end":34314,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34315,"byte_end":34318,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Methods of this trait are generic over the [`SeekNum`] trait, which is","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34319,"byte_end":34393,"line_start":145,"line_end":145,"column_start":1,"column_end":75}},{"value":"/ implemented for primitive numeric types, i.e.: `i32`, `u32`, `u64`,","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34394,"byte_end":34465,"line_start":146,"line_end":146,"column_start":1,"column_end":72}},{"value":"/ `u128`, and `usize`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34466,"byte_end":34490,"line_start":147,"line_end":147,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34662,"byte_end":34677,"line_start":152,"line_end":152,"column_start":8,"column_end":23},"name":"try_current_pos","qualname":"::stream::StreamCipherSeek::try_current_pos","value":"pub fn try_current_pos<T: SeekNum>(&Self) -> Result<T, OverflowError>","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Try to get current keystream position","sig":null,"attributes":[{"value":"/ Try to get current keystream position","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34524,"byte_end":34565,"line_start":149,"line_end":149,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34570,"byte_end":34573,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Returns [`OverflowError`] if position can not be represented by type `T`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34578,"byte_end":34654,"line_start":151,"line_end":151,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34890,"byte_end":34898,"line_start":158,"line_end":158,"column_start":8,"column_end":16},"name":"try_seek","qualname":"::stream::StreamCipherSeek::try_seek","value":"pub fn try_seek<T: SeekNum>(&mut Self, T) -> Result<(), StreamCipherError>","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Try to seek to the given position","sig":null,"attributes":[{"value":"/ Try to seek to the given position","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34731,"byte_end":34768,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34773,"byte_end":34776,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns [`StreamCipherError`] if provided position value is bigger than","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34781,"byte_end":34856,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ keystream length.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34861,"byte_end":34882,"line_start":157,"line_end":157,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35091,"byte_end":35102,"line_start":164,"line_end":164,"column_start":8,"column_end":19},"name":"current_pos","qualname":"::stream::StreamCipherSeek::current_pos","value":"pub fn current_pos<T: SeekNum>(&Self) -> T","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Get current keystream position","sig":null,"attributes":[{"value":"/ Get current keystream position","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":34969,"byte_end":35003,"line_start":160,"line_end":160,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35008,"byte_end":35011,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35016,"byte_end":35028,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/ If position can not be represented by type `T`","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35033,"byte_end":35083,"line_start":163,"line_end":163,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35311,"byte_end":35315,"line_start":172,"line_end":172,"column_start":8,"column_end":12},"name":"seek","qualname":"::stream::StreamCipherSeek::seek","value":"pub fn seek<T: SeekNum>(&mut Self, T)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Seek to the given position","sig":null,"attributes":[{"value":"/ Seek to the given position","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35180,"byte_end":35210,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35215,"byte_end":35218,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35223,"byte_end":35235,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/ If provided position value is bigger than keystream leangth","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35240,"byte_end":35303,"line_start":171,"line_end":171,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":210},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35895,"byte_end":35902,"line_start":192,"line_end":192,"column_start":11,"column_end":18},"name":"SeekNum","qualname":"::stream::SeekNum","value":"SeekNum: Sized","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":213}],"decl_id":null,"docs":" Trait implemented for numeric types which can be used with the\n [`StreamCipherSeek`] trait.","sig":null,"attributes":[{"value":"/ Trait implemented for numeric types which can be used with the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35642,"byte_end":35708,"line_start":187,"line_end":187,"column_start":1,"column_end":67}},{"value":"/ [`StreamCipherSeek`] trait.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35709,"byte_end":35740,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35741,"byte_end":35744,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for `i32`, `u32`, `u64`, `u128`, and `usize`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35745,"byte_end":35820,"line_start":190,"line_end":190,"column_start":1,"column_end":76}},{"value":"/ It is not intended to be implemented in third-party crates.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35821,"byte_end":35884,"line_start":191,"line_end":191,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":36037,"byte_end":36052,"line_start":195,"line_end":195,"column_start":8,"column_end":23},"name":"from_block_byte","qualname":"::stream::SeekNum::from_block_byte","value":"pub fn from_block_byte<T: Counter>(T, u8, u8) -> Result<Self, OverflowError>","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" Try to get position for block number `block`, byte position inside\n block `byte`, and block size `bs`.\n","sig":null,"attributes":[{"value":"/ Try to get position for block number `block`, byte position inside","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35916,"byte_end":35986,"line_start":193,"line_end":193,"column_start":5,"column_end":75}},{"value":"/ block `byte`, and block size `bs`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35991,"byte_end":36029,"line_start":194,"line_end":194,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":36211,"byte_end":36226,"line_start":198,"line_end":198,"column_start":8,"column_end":23},"name":"into_block_byte","qualname":"::stream::SeekNum::into_block_byte","value":"pub fn into_block_byte<T: Counter>(Self, u8) -> Result<(T, u8), OverflowError>","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" Try to get block number and bytes position for given block size `bs`.\n","sig":null,"attributes":[{"value":"/ Try to get block number and bytes position for given block size `bs`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":36130,"byte_end":36203,"line_start":197,"line_end":197,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":251},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37544,"byte_end":37557,"line_start":10,"line_end":10,"column_start":11,"column_end":24},"name":"StreamBackend","qualname":"::stream_core::StreamBackend","value":"StreamBackend: ParBlocksSizeUser","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"decl_id":null,"docs":" Trait implemented by stream cipher backends.\n","sig":null,"attributes":[{"value":"/ Trait implemented by stream cipher backends.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37485,"byte_end":37533,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37620,"byte_end":37632,"line_start":12,"line_end":12,"column_start":8,"column_end":20},"name":"gen_ks_block","qualname":"::stream_core::StreamBackend::gen_ks_block","value":"pub fn gen_ks_block(&mut Self, &mut Block<Self>)","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Generate keystream block.\n","sig":null,"attributes":[{"value":"/ Generate keystream block.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37583,"byte_end":37612,"line_start":11,"line_end":11,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37747,"byte_end":37764,"line_start":16,"line_end":16,"column_start":8,"column_end":25},"name":"gen_par_ks_blocks","qualname":"::stream_core::StreamBackend::gen_par_ks_blocks","value":"pub fn gen_par_ks_blocks(&mut Self, &mut ParBlocks<Self>)","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Generate keystream blocks in parallel.\n","sig":null,"attributes":[{"value":"/ Generate keystream blocks in parallel.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37675,"byte_end":37717,"line_start":14,"line_end":14,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37722,"byte_end":37739,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38030,"byte_end":38045,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"gen_tail_blocks","qualname":"::stream_core::StreamBackend::gen_tail_blocks","value":"pub fn gen_tail_blocks(&mut Self, &mut [Block<Self>])","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Generate keystream blocks. Length of the buffer MUST be smaller\n than `Self::ParBlocksSize`.\n","sig":null,"attributes":[{"value":"/ Generate keystream blocks. Length of the buffer MUST be smaller","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37897,"byte_end":37964,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/ than `Self::ParBlocksSize`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37969,"byte_end":38000,"line_start":23,"line_end":23,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38005,"byte_end":38022,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":255},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38337,"byte_end":38350,"line_start":36,"line_end":36,"column_start":11,"column_end":24},"name":"StreamClosure","qualname":"::stream_core::StreamClosure","value":"StreamClosure: BlockSizeUser","parent":null,"children":[{"krate":0,"index":256}],"decl_id":null,"docs":" Trait for [`StreamBackend`] users.","sig":null,"attributes":[{"value":"/ Trait for [`StreamBackend`] users.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38234,"byte_end":38272,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38273,"byte_end":38276,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This trait is used to define rank-2 closures.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38277,"byte_end":38326,"line_start":35,"line_end":35,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38440,"byte_end":38444,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"call","qualname":"::stream_core::StreamClosure::call","value":"pub fn call<B: StreamBackend<BlockSize = Self::BlockSize>>(Self, &mut B)","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Execute closure with the provided stream cipher backend.\n","sig":null,"attributes":[{"value":"/ Execute closure with the provided stream cipher backend.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38372,"byte_end":38432,"line_start":37,"line_end":37,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38573,"byte_end":38589,"line_start":42,"line_end":42,"column_start":11,"column_end":27},"name":"StreamCipherCore","qualname":"::stream_core::StreamCipherCore","value":"StreamCipherCore: BlockSizeUser + Sized","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"decl_id":null,"docs":" Block-level synchronous stream ciphers.\n","sig":null,"attributes":[{"value":"/ Block-level synchronous stream ciphers.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38519,"byte_end":38562,"line_start":41,"line_end":41,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38877,"byte_end":38893,"line_start":48,"line_end":48,"column_start":8,"column_end":24},"name":"remaining_blocks","qualname":"::stream_core::StreamCipherCore::remaining_blocks","value":"pub fn remaining_blocks(&Self) -> Option<usize>","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Return number of remaining blocks before cipher wraps around.","sig":null,"attributes":[{"value":"/ Return number of remaining blocks before cipher wraps around.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38619,"byte_end":38684,"line_start":43,"line_end":43,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38689,"byte_end":38692,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if number of remaining blocks can not be computed","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38697,"byte_end":38765,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ (e.g. in ciphers based on the sponge construction) or it's too big","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38770,"byte_end":38840,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ to fit into `usize`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38845,"byte_end":38869,"line_start":47,"line_end":47,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38994,"byte_end":39014,"line_start":51,"line_end":51,"column_start":8,"column_end":28},"name":"process_with_backend","qualname":"::stream_core::StreamCipherCore::process_with_backend","value":"pub fn process_with_backend<impl StreamClosure<BlockSize = Self::BlockSize>: StreamClosure<BlockSize\n=\nSelf::BlockSize>>(&mut Self, impl StreamClosure<BlockSize = Self::BlockSize>)","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Process data using backend provided to the rank-2 closure.\n","sig":null,"attributes":[{"value":"/ Process data using backend provided to the rank-2 closure.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38924,"byte_end":38986,"line_start":50,"line_end":50,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39212,"byte_end":39233,"line_start":57,"line_end":57,"column_start":8,"column_end":29},"name":"write_keystream_block","qualname":"::stream_core::StreamCipherCore::write_keystream_block","value":"pub fn write_keystream_block(&mut Self, &mut Block<Self>)","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Write keystream block.","sig":null,"attributes":[{"value":"/ Write keystream block.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39084,"byte_end":39110,"line_start":53,"line_end":53,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39115,"byte_end":39118,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ WARNING: this method does not check number of remaining blocks!","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39123,"byte_end":39190,"line_start":55,"line_end":55,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39195,"byte_end":39204,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39472,"byte_end":39494,"line_start":65,"line_end":65,"column_start":8,"column_end":30},"name":"write_keystream_blocks","qualname":"::stream_core::StreamCipherCore::write_keystream_blocks","value":"pub fn write_keystream_blocks(&mut Self, &mut [Block<Self>])","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Write keystream blocks.","sig":null,"attributes":[{"value":"/ Write keystream blocks.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39343,"byte_end":39370,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39375,"byte_end":39378,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ WARNING: this method does not check number of remaining blocks!","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39383,"byte_end":39450,"line_start":63,"line_end":63,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39455,"byte_end":39464,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39737,"byte_end":39764,"line_start":73,"line_end":73,"column_start":8,"column_end":35},"name":"apply_keystream_block_inout","qualname":"::stream_core::StreamCipherCore::apply_keystream_block_inout","value":"pub fn apply_keystream_block_inout(&mut Self, InOut<, , Block<Self>>)","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Apply keystream block.","sig":null,"attributes":[{"value":"/ Apply keystream block.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39609,"byte_end":39635,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39640,"byte_end":39643,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ WARNING: this method does not check number of remaining blocks!","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39648,"byte_end":39715,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39720,"byte_end":39729,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40013,"byte_end":40035,"line_start":81,"line_end":81,"column_start":8,"column_end":30},"name":"apply_keystream_blocks","qualname":"::stream_core::StreamCipherCore::apply_keystream_blocks","value":"pub fn apply_keystream_blocks(&mut Self, &mut [Block<Self>])","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Apply keystream blocks.","sig":null,"attributes":[{"value":"/ Apply keystream blocks.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39884,"byte_end":39911,"line_start":77,"line_end":77,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39916,"byte_end":39919,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ WARNING: this method does not check number of remaining blocks!","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39924,"byte_end":39991,"line_start":79,"line_end":79,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":39996,"byte_end":40005,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40315,"byte_end":40343,"line_start":91,"line_end":91,"column_start":8,"column_end":36},"name":"apply_keystream_blocks_inout","qualname":"::stream_core::StreamCipherCore::apply_keystream_blocks_inout","value":"pub fn apply_keystream_blocks_inout(&mut Self, InOutBuf<, , Block<Self>>)","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Apply keystream blocks.","sig":null,"attributes":[{"value":"/ Apply keystream blocks.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40186,"byte_end":40213,"line_start":87,"line_end":87,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40218,"byte_end":40221,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ WARNING: this method does not check number of remaining blocks!","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40226,"byte_end":40293,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40298,"byte_end":40307,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40769,"byte_end":40796,"line_start":103,"line_end":103,"column_start":8,"column_end":35},"name":"try_apply_keystream_partial","qualname":"::stream_core::StreamCipherCore::try_apply_keystream_partial","value":"pub fn try_apply_keystream_partial(Self, InOutBuf<, , u8>)\n-> Result<(), StreamCipherError>","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Try to apply keystream to data not divided into blocks.","sig":null,"attributes":[{"value":"/ Try to apply keystream to data not divided into blocks.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40469,"byte_end":40528,"line_start":95,"line_end":95,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40533,"byte_end":40536,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Consumes cipher since it may consume final keystream block only","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40541,"byte_end":40608,"line_start":97,"line_end":97,"column_start":5,"column_end":72}},{"value":"/ partially.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40613,"byte_end":40627,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40632,"byte_end":40635,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Returns an error if number of remaining blocks is not sufficient","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40640,"byte_end":40708,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/ for processing the input data.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40713,"byte_end":40747,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":40752,"byte_end":40761,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42108,"byte_end":42131,"line_start":144,"line_end":144,"column_start":8,"column_end":31},"name":"apply_keystream_partial","qualname":"::stream_core::StreamCipherCore::apply_keystream_partial","value":"pub fn apply_keystream_partial(Self, InOutBuf<, , u8>)","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Try to apply keystream to data not divided into blocks.","sig":null,"attributes":[{"value":"/ Try to apply keystream to data not divided into blocks.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":41808,"byte_end":41867,"line_start":135,"line_end":135,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":41872,"byte_end":41875,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Consumes cipher since it may consume final keystream block only","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":41880,"byte_end":41947,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ partially.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":41952,"byte_end":41966,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":41971,"byte_end":41974,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":41979,"byte_end":41991,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/ If number of remaining blocks is not sufficient for processing the","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":41996,"byte_end":42066,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ input data.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42071,"byte_end":42086,"line_start":142,"line_end":142,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42091,"byte_end":42100,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":269},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42709,"byte_end":42716,"line_start":159,"line_end":159,"column_start":11,"column_end":18},"name":"Counter","qualname":"::stream_core::Counter","value":"Counter: TryFrom<i32> + TryFrom<u32> + TryFrom<u64> + TryFrom<u128> + TryFrom<usize> +\nTryInto<i32> + TryInto<u32> + TryInto<u64> + TryInto<u128> + TryInto<usize>","parent":null,"children":[],"decl_id":null,"docs":" Counter type usable with [`StreamCipherCore`].","sig":null,"attributes":[{"value":"/ Counter type usable with [`StreamCipherCore`].","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42470,"byte_end":42520,"line_start":154,"line_end":154,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42521,"byte_end":42524,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for `i32`, `u32`, `u64`, `u128`, and `usize`.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42525,"byte_end":42600,"line_start":156,"line_end":156,"column_start":1,"column_end":76}},{"value":"/ It's not intended to be implemented in third-party crates, but doing so","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42601,"byte_end":42676,"line_start":157,"line_end":157,"column_start":1,"column_end":76}},{"value":"/ is not forbidden.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42677,"byte_end":42698,"line_start":158,"line_end":158,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":270},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42977,"byte_end":42997,"line_start":174,"line_end":174,"column_start":11,"column_end":31},"name":"StreamCipherSeekCore","qualname":"::stream_core::StreamCipherSeekCore","value":"StreamCipherSeekCore: StreamCipherCore","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"decl_id":null,"docs":" Block-level seeking trait for stream ciphers.\n","sig":null,"attributes":[{"value":"/ Block-level seeking trait for stream ciphers.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42917,"byte_end":42966,"line_start":173,"line_end":173,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":271},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":43075,"byte_end":43082,"line_start":176,"line_end":176,"column_start":10,"column_end":17},"name":"Counter","qualname":"::stream_core::StreamCipherSeekCore::Counter","value":"type Counter: Counter;","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Counter type used inside stream cipher.\n","sig":null,"attributes":[{"value":"/ Counter type used inside stream cipher.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":43022,"byte_end":43065,"line_start":175,"line_end":175,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":43137,"byte_end":43150,"line_start":179,"line_end":179,"column_start":8,"column_end":21},"name":"get_block_pos","qualname":"::stream_core::StreamCipherSeekCore::get_block_pos","value":"pub fn get_block_pos(&Self) -> Self::Counter","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Get current block position.\n","sig":null,"attributes":[{"value":"/ Get current block position.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":43098,"byte_end":43129,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":43212,"byte_end":43225,"line_start":182,"line_end":182,"column_start":8,"column_end":21},"name":"set_block_pos","qualname":"::stream_core::StreamCipherSeekCore::set_block_pos","value":"pub fn set_block_pos(&mut Self, Self::Counter)","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Set block position.\n","sig":null,"attributes":[{"value":"/ Set block position.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":43181,"byte_end":43204,"line_start":181,"line_end":181,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":548},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":47625,"byte_end":47648,"line_start":17,"line_end":17,"column_start":12,"column_end":35},"name":"StreamCipherCoreWrapper","qualname":"::stream_wrapper::StreamCipherCoreWrapper","value":"StreamCipherCoreWrapper {  }","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"decl_id":null,"docs":" Wrapper around [`StreamCipherCore`] implementations.","sig":null,"attributes":[{"value":"/ Wrapper around [`StreamCipherCore`] implementations.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":47458,"byte_end":47514,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":47515,"byte_end":47518,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It handles data buffering and implements the slice-based traits.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":47519,"byte_end":47587,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":47979,"byte_end":47987,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"get_core","qualname":"<StreamCipherCoreWrapper<T>>::get_core","value":"pub fn get_core(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Return reference to the core type.\n","sig":null,"attributes":[{"value":"/ Return reference to the core type.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":47929,"byte_end":47967,"line_start":32,"line_end":32,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":48083,"byte_end":48092,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"from_core","qualname":"<StreamCipherCoreWrapper<T>>::from_core","value":"pub fn from_core(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return reference to the core type.\n","sig":null,"attributes":[{"value":"/ Return reference to the core type.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":48033,"byte_end":48071,"line_start":37,"line_end":37,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":490},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1628,"byte_end":1635,"line_start":58,"line_end":58,"column_start":11,"column_end":18},"name":"IvState","qualname":"::IvState","value":"IvState: IvSizeUser","parent":null,"children":[{"krate":0,"index":491}],"decl_id":null,"docs":" Trait for loading current IV state.\n","sig":null,"attributes":[{"value":"/ Trait for loading current IV state.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1578,"byte_end":1617,"line_start":57,"line_end":57,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1691,"byte_end":1699,"line_start":60,"line_end":60,"column_start":8,"column_end":16},"name":"iv_state","qualname":"::IvState::iv_state","value":"pub fn iv_state(&Self) -> Iv<Self>","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Returns current IV state.\n","sig":null,"attributes":[{"value":"/ Returns current IV state.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1654,"byte_end":1683,"line_start":59,"line_end":59,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1777,"byte_end":1794,"line_start":64,"line_end":64,"column_start":11,"column_end":28},"name":"ParBlocksSizeUser","qualname":"::ParBlocksSizeUser","value":"ParBlocksSizeUser: BlockSizeUser","parent":null,"children":[{"krate":0,"index":493}],"decl_id":null,"docs":" Types which process blocks in parallel.\n","sig":null,"attributes":[{"value":"/ Types which process blocks in parallel.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1723,"byte_end":1766,"line_start":63,"line_end":63,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":493},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1882,"byte_end":1895,"line_start":66,"line_end":66,"column_start":10,"column_end":23},"name":"ParBlocksSize","qualname":"::ParBlocksSizeUser::ParBlocksSize","value":"type ParBlocksSize: ArrayLength<Block<Self>>;","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Number of blocks which can be processed in parallel.\n","sig":null,"attributes":[{"value":"/ Number of blocks which can be processed in parallel.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1816,"byte_end":1872,"line_start":65,"line_end":65,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":494},"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":2008,"byte_end":2017,"line_start":70,"line_end":70,"column_start":10,"column_end":19},"name":"ParBlocks","qualname":"::ParBlocks","value":"GenericArray<Block<T>, <T as ParBlocksSizeUser>::ParBlocksSize>","parent":null,"children":[],"decl_id":null,"docs":" Parallel blocks on which [`ParBlocksSizeUser`] implementors operate.\n","sig":null,"attributes":[{"value":"/ Parallel blocks on which [`ParBlocksSizeUser`] implementors operate.","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1926,"byte_end":1998,"line_start":69,"line_end":69,"column_start":1,"column_end":73}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":22990,"byte_end":22993,"line_start":569,"line_end":569,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":23183,"byte_end":23186,"line_start":575,"line_end":575,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":23975,"byte_end":23983,"line_start":600,"line_end":600,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":24085,"byte_end":24093,"line_start":604,"line_end":604,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":24475,"byte_end":24484,"line_start":616,"line_end":616,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":24586,"byte_end":24595,"line_start":620,"line_end":620,"column_start":56,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28718,"byte_end":28735,"line_start":14,"line_end":14,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":29155,"byte_end":29168,"line_start":29,"line_end":29,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":29321,"byte_end":29338,"line_start":35,"line_end":35,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":44258,"byte_end":44271,"line_start":217,"line_end":217,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":44357,"byte_end":44370,"line_start":220,"line_end":220,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":44659,"byte_end":44673,"line_start":230,"line_end":230,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":44759,"byte_end":44773,"line_start":233,"line_end":233,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":45433,"byte_end":45446,"line_start":254,"line_end":254,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":45549,"byte_end":45562,"line_start":258,"line_end":258,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":45963,"byte_end":45977,"line_start":271,"line_end":271,"column_start":57,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":46080,"byte_end":46094,"line_start":275,"line_end":275,"column_start":57,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":47821,"byte_end":47844,"line_start":27,"line_end":27,"column_start":27,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":49822,"byte_end":49845,"line_start":106,"line_end":106,"column_start":44,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":50953,"byte_end":50976,"line_start":146,"line_end":146,"column_start":52,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":51957,"byte_end":51980,"line_start":173,"line_end":173,"column_start":54,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":52146,"byte_end":52169,"line_start":181,"line_end":181,"column_start":52,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":52331,"byte_end":52354,"line_start":189,"line_end":189,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":52676,"byte_end":52699,"line_start":204,"line_end":204,"column_start":46,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3105,"byte_end":3118,"line_start":26,"line_end":26,"column_start":24,"column_end":37},"kind":"SuperTrait","from":{"krate":4,"index":31},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":3221,"byte_end":3238,"line_start":29,"line_end":29,"column_start":25,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":492},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4697,"byte_end":4710,"line_start":74,"line_end":74,"column_start":25,"column_end":38},"kind":"SuperTrait","from":{"krate":4,"index":31},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4936,"byte_end":4949,"line_start":80,"line_end":80,"column_start":25,"column_end":38},"kind":"SuperTrait","from":{"krate":4,"index":31},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":4952,"byte_end":4957,"line_start":80,"line_end":80,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":9155,"byte_end":9168,"line_start":195,"line_end":195,"column_start":25,"column_end":38},"kind":"SuperTrait","from":{"krate":4,"index":31},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13870,"byte_end":13883,"line_start":325,"line_end":325,"column_start":28,"column_end":41},"kind":"SuperTrait","from":{"krate":4,"index":31},"to":{"krate":0,"index":72}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":13886,"byte_end":13891,"line_start":325,"line_end":325,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":72}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18434,"byte_end":18447,"line_start":444,"line_end":444,"column_start":28,"column_end":41},"kind":"SuperTrait","from":{"krate":4,"index":31},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":18450,"byte_end":18455,"line_start":444,"line_end":444,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":22990,"byte_end":22993,"line_start":569,"line_end":569,"column_start":45,"column_end":48},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":93},"to":{"krate":0,"index":72}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":23183,"byte_end":23186,"line_start":575,"line_end":575,"column_start":45,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":97},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":23975,"byte_end":23983,"line_start":600,"line_end":600,"column_start":57,"column_end":65},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":110},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":24085,"byte_end":24093,"line_start":604,"line_end":604,"column_start":56,"column_end":64},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":110},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":24475,"byte_end":24484,"line_start":616,"line_end":616,"column_start":57,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":126},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/block.rs","byte_start":24586,"byte_end":24595,"line_start":620,"line_end":620,"column_start":56,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":126},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":28718,"byte_end":28735,"line_start":14,"line_end":14,"column_start":23,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":496},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":29155,"byte_end":29168,"line_start":29,"line_end":29,"column_start":23,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":503},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/errors.rs","byte_start":29321,"byte_end":29338,"line_start":35,"line_end":35,"column_start":30,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":496},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":29992,"byte_end":29997,"line_start":12,"line_end":12,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":181}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream.rs","byte_start":35904,"byte_end":35909,"line_start":192,"line_end":192,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":210}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":37559,"byte_end":37576,"line_start":10,"line_end":10,"column_start":26,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":492},"to":{"krate":0,"index":251}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38352,"byte_end":38365,"line_start":36,"line_end":36,"column_start":26,"column_end":39},"kind":"SuperTrait","from":{"krate":4,"index":31},"to":{"krate":0,"index":255}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38591,"byte_end":38604,"line_start":42,"line_end":42,"column_start":29,"column_end":42},"kind":"SuperTrait","from":{"krate":4,"index":31},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":38607,"byte_end":38612,"line_start":42,"line_end":42,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42722,"byte_end":42729,"line_start":160,"line_end":160,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2937},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42741,"byte_end":42748,"line_start":161,"line_end":161,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2937},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42760,"byte_end":42767,"line_start":162,"line_end":162,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2937},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42779,"byte_end":42786,"line_start":163,"line_end":163,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2937},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42799,"byte_end":42806,"line_start":164,"line_end":164,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2937},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42820,"byte_end":42827,"line_start":165,"line_end":165,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2933},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42839,"byte_end":42846,"line_start":166,"line_end":166,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2933},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42858,"byte_end":42865,"line_start":167,"line_end":167,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2933},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42877,"byte_end":42884,"line_start":168,"line_end":168,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2933},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42897,"byte_end":42904,"line_start":169,"line_end":169,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2933},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":42999,"byte_end":43015,"line_start":174,"line_end":174,"column_start":33,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":258},"to":{"krate":0,"index":270}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":44258,"byte_end":44271,"line_start":217,"line_end":217,"column_start":49,"column_end":62},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":281},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":44357,"byte_end":44370,"line_start":220,"line_end":220,"column_start":49,"column_end":62},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":281},"to":{"krate":0,"index":255}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":44659,"byte_end":44673,"line_start":230,"line_end":230,"column_start":49,"column_end":63},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":294},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":44759,"byte_end":44773,"line_start":233,"line_end":233,"column_start":49,"column_end":63},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":255}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":45433,"byte_end":45446,"line_start":254,"line_end":254,"column_start":57,"column_end":70},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":307},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":45549,"byte_end":45562,"line_start":258,"line_end":258,"column_start":57,"column_end":70},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":307},"to":{"krate":0,"index":255}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":45963,"byte_end":45977,"line_start":271,"line_end":271,"column_start":57,"column_end":71},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":323},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_core.rs","byte_start":46080,"byte_end":46094,"line_start":275,"line_end":275,"column_start":57,"column_end":71},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":323},"to":{"krate":0,"index":255}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":47821,"byte_end":47844,"line_start":27,"line_end":27,"column_start":27,"column_end":50},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":49822,"byte_end":49845,"line_start":106,"line_end":106,"column_start":44,"column_end":67},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":548},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":50953,"byte_end":50976,"line_start":146,"line_end":146,"column_start":52,"column_end":75},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":548},"to":{"krate":0,"index":198}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":51957,"byte_end":51980,"line_start":173,"line_end":173,"column_start":54,"column_end":77},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":548},"to":{"krate":4,"index":43}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":52146,"byte_end":52169,"line_start":181,"line_end":181,"column_start":52,"column_end":75},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":548},"to":{"krate":4,"index":46}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":52331,"byte_end":52354,"line_start":189,"line_end":189,"column_start":50,"column_end":73},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":548},"to":{"krate":4,"index":58}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/stream_wrapper.rs","byte_start":52676,"byte_end":52699,"line_start":204,"line_end":204,"column_start":46,"column_end":69},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":548},"to":{"krate":4,"index":55}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1637,"byte_end":1647,"line_start":58,"line_end":58,"column_start":20,"column_end":30},"kind":"SuperTrait","from":{"krate":4,"index":46},"to":{"krate":0,"index":490}},{"span":{"file_name":"/home/banana/.cargo/registry/src/github.com-1ecc6299db9ec823/cipher-0.4.2/src/lib.rs","byte_start":1796,"byte_end":1809,"line_start":64,"line_end":64,"column_start":30,"column_end":43},"kind":"SuperTrait","from":{"krate":4,"index":31},"to":{"krate":0,"index":492}}]}